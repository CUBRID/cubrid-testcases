===================================================
0
===================================================
15
===================================================
0
===================================================
0
===================================================
0
===================================================
0
===================================================
0
===================================================
count(*)    
15     

Query plan:
sscan
    class: t node[?]
    cost:  ? card ?
Query stmt:
select count(*) from t t
===================================================
count(*)    
0     

Query plan:
sscan
    class: t node[?]
    sargs: term[?]
    cost:  ? card ?
Query stmt:
select count(*) from t t where ?<>?
===================================================
count(*)    
0     

Query plan:
sscan
    class: t node[?]
    sargs: term[?]
    cost:  ? card ?
Query stmt:
select count(*) from t t where ? <> ?
===================================================
i    j    k    l    
1     0     0     4     

Query plan:
iscan
    class: t node[?]
    index: i_t_l term[?]
    sargs: term[?]
    cost:  ? card ?
Query stmt:
select t.i, t.j, t.k, t.l from t t where t.i<>? and t.l= ?:? 
===================================================
i    j    k    l    

Query plan:
iscan
    class: t node[?]
    index: i_t_l term[?]
    sargs: term[?]
    cost:  ? card ?
Query stmt:
select /*+ USE_IDX */ t.i, t.j, t.k, t.l from t t where t.l= ?:?  and t.i= ?:? 
===================================================
if(sum(i)-sum(j)<>0, 'nok', 'ok')    
ok     

Query plan:
sscan
    class: t node[?]
    sargs: term[?] AND term[?]
    cost:  ? card ?
Query stmt:
select  if(sum(t.i)-sum(t.j)<>?,  cast('nok' as varchar),  cast('ok' as varchar)) from t t where t.i<>? and t.j<>?
===================================================
i    j    k    l    
null     1     1     9     
1     1     null     13     

Query plan:
iscan
    class: t node[?]
    index: i_t_l term[?]
    sargs: term[?] AND term[?]
    sort:  ? asc
    cost:  ? card ?
Query stmt:
select t.i, t.j, t.k, t.l from t t where (t.l> ?:? ) and t.j<>? and (t.i<>? or t.k<>?) order by ?
/* ---> skip ORDER BY */
===================================================
i    j    k    l    
0     1     0     2     
0     1     1     3     
1     0     0     4     
1     0     1     5     
1     1     0     6     
1     1     1     7     
null     1     1     9     
1     null     1     11     
1     1     null     13     

Query plan:
temp(distinct)
    subplan: sscan
                 class: t node[?]
                 cost:  ? card ?
    sort:  ? desc
    cost:  ? card ?
Query stmt:
(select distinct t.k from t t order by ? desc  for orderby_num()<= ?:? )
Query plan:
temp(order by)
    subplan: sscan
                 class: t node[?]
                 sargs: term[?]
                 cost:  ? card ?
    sort:  ? asc
    cost:  ? card ?
Query stmt:
select t.i, t.j, t.k, t.l from t t where (t.i<>? or t.j<>?) in (select distinct t.k from t t order by ? desc  for orderby_num()<= ?:? ) order by ?
===================================================
i    j    (i<>0 and j<>0)    l mod 2    ( not (l mod 2)<>0)    
0     0     0     0     1     
0     0     0     1     0     
0     0     0     0     1     

Query plan:
iscan
    class: t node[?]
    index: i_t_i term[?]
    sargs: term[?]
    cost:  ? card ?
Query stmt:
select t.l from t t where (t.l mod ?)=? and (t.i< ?:? )
Query plan:
sscan
    class: t node[?]
    sargs: term[?]
    cost:  ? card ?
Query stmt:
select t.l from t t where ((t.l mod ?)=t.i<>? and t.j<>?)
Query plan:
temp(order by)
    subplan: sscan
                 class: t node[?]
                 sargs: term[?]
                 cost:  ? card ?
    sort:  ? asc
    cost:  ? card ?
Query stmt:
select t.i, t.j, (t.i<>? and t.j<>?), t.l mod ?, ( not (t.l mod ?)<>?), t.l from t t where (t.i<>? or t.j<>?) in (select t.l from t t where (t.l mod ?)=? and (t.i< ?:? ) union select t.l from t t where ((t.l mod ?)=t.i<>? and t.j<>?)) order by ?
===================================================
(i<>0 and j<>0 and k<>0)    ((i<>0 and j<>0) or k<>0)    case when i<>0 and j<>0 and k<>0 then 1 when (i<>0 and j<>0) or k<>0 then 2 else 3 end    
0     0     3     
0     1     2     
0     0     3     
0     1     2     
0     0     3     
0     1     2     
0     1     2     
1     1     1     
0     0     3     
null     1     2     
0     0     3     
null     1     2     
0     null     3     
null     1     2     
null     null     3     

Query plan:
temp(order by)
    subplan: sscan
                 class: t node[?]
                 cost:  ? card ?
    sort:  ? asc
    cost:  ? card ?
Query stmt:
select (t.i<>? and t.j<>? and t.k<>?), ((t.i<>? and t.j<>?) or t.k<>?), case when t.i<>? and t.j<>? and t.k<>? then ? when (t.i<>? and t.j<>?) or t.k<>? then ? else ? end, t.l from t t order by ?
===================================================
i    j    k    l    
0     0     0     0     
0     0     1     1     
0     1     0     2     
0     1     1     3     
0     null     0     10     
0     0     null     12     

Query plan:
temp(order by)
    subplan: iscan
                 class: t node[?]
                 index: i_t_i term[?]
                 cost:  ? card ?
    sort:  ? asc
    cost:  ? card ?
Query stmt:
select t.i, t.j, t.k, t.l from t t where t.i= ?:?  order by ?
===================================================
0
===================================================
0

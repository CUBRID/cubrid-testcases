===================================================
0
===================================================
0
===================================================
0
===================================================
0
===================================================
0
===================================================
10000
===================================================
10000
===================================================
10000
===================================================
10000
===================================================
0
===================================================
0
===================================================
0
===================================================
0
===================================================
0
===================================================
'p_1'    min(col1)    max(col1)    
p_1     1     10000     

===================================================
trace    

Query Plan:
  TABLE SCAN (dba.t?)

  rewritten query: select 'p_?', min([dba.t?].col?), max([dba.t?].col?) from [dba.t?] [dba.t?]

Trace Statistics:
  SELECT (time: ?, fetch: ?, ioread: ?)
    SCAN (table: dba.t?), (noscan time: ?, fetch: ?, ioread: ?, readrows: ?, rows: ?, agl: idx)
     

===================================================
'p_2'    min(col1)    max(col1)    
p_2     1     10000     

===================================================
trace    

Query Plan:
  TABLE SCAN (dba.t?)

  rewritten query: select 'p_?', min([dba.t?].col?), max([dba.t?].col?) from [dba.t?] [dba.t?]

Trace Statistics:
  SELECT (time: ?, fetch: ?, ioread: ?)
    SCAN (table: dba.t?), (noscan time: ?, fetch: ?, ioread: ?, readrows: ?, rows: ?, agl: idx)
     

===================================================
'p_3'    to_char(min(col1))    to_char(max(col2))    
p_3     1     20000     

===================================================
trace    

Query Plan:
  TABLE SCAN (dba.t?)

  rewritten query: select 'p_?',  to_char(min([dba.t?].col?)),  to_char(max([dba.t?].col?)) from [dba.t?] [dba.t?]

Trace Statistics:
  SELECT (time: ?, fetch: ?, ioread: ?)
    SCAN (table: dba.t?), (heap time: ?, fetch: ?, ioread: ?, readrows: ?, rows: ?, agl: idx)
     

===================================================
'n_1'    min(col2)    max(col2)    
n_1     10001     20000     

===================================================
trace    

Query Plan:
  TABLE SCAN (dba.t?)

  rewritten query: select 'n_?', min([dba.t?].col?), max([dba.t?].col?) from [dba.t?] [dba.t?]

Trace Statistics:
  SELECT (time: ?, fetch: ?, ioread: ?)
    SCAN (table: dba.t?), (heap time: ?, fetch: ?, ioread: ?, readrows: ?, rows: ?)
     

===================================================
'n_2'    min(col2)    max(col2)    
n_2     10001     20000     

===================================================
trace    

Query Plan:
  TABLE SCAN (dba.t?)

  rewritten query: select 'n_?', min([dba.t?].col?), max([dba.t?].col?) from [dba.t?] [dba.t?]

Trace Statistics:
  SELECT (time: ?, fetch: ?, ioread: ?)
    SCAN (table: dba.t?), (heap time: ?, fetch: ?, ioread: ?, readrows: ?, rows: ?)
     

===================================================
'n_3'    min(col2)    max(col2)    
n_3     10001     20000     

===================================================
trace    

Query Plan:
  TABLE SCAN (dba.t?)

  rewritten query: select 'n_?', min([dba.t?].col?), max([dba.t?].col?) from [dba.t?] [dba.t?]

Trace Statistics:
  SELECT (time: ?, fetch: ?, ioread: ?)
    SCAN (table: dba.t?), (heap time: ?, fetch: ?, ioread: ?, readrows: ?, rows: ?)
     

===================================================
'n_4'    min(col1)    max(col1)    
n_4     1     10000     

===================================================
trace    

Query Plan:
  TABLE SCAN (dba.t?)

  rewritten query: select 'n_?', min([dba.t?].col?), max([dba.t?].col?) from [dba.t?] [dba.t?]

Trace Statistics:
  SELECT (time: ?, fetch: ?, ioread: ?)
    SCAN (table: dba.t?), (heap time: ?, fetch: ?, ioread: ?, readrows: ?, rows: ?)
     

===================================================
0

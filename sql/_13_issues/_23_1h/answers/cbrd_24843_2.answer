===================================================
0
===================================================
0
===================================================
0
===================================================
0
===================================================
0
0
0
===================================================
9
===================================================
9
===================================================
9
===================================================
9
===================================================
0
===================================================
0
===================================================
a    b    p_a    p_b    
19     -100     1     1     

===================================================
trace    

Query Plan:
  INDEX SCAN (c.fk_t_child_p_a_p_b) (key range: c.p_a= ?:? , key filter: c.p_a is not null , key filter: c.p_b is not null )

  rewritten query: select c.a, c.b, c.p_a, c.p_b from [dba.t_child] c where c.p_a= ?:?  and c.p_b is not null  and c.p_a is not null 

Trace Statistics:
  SELECT (time: ?, fetch: ?, ioread: ?)
    SCAN (index: dba.t_child.fk_t_child_p_a_p_b), (btree time: ?, fetch: ?, ioread: ?, readkeys: ?, filteredkeys: ?, rows: ?) (lookup time: ?, rows: ?)
     

===================================================
a    b    p_a    p_b    
19     -100     1     1     

===================================================
trace    

Query Plan:
  INDEX SCAN (c.fk_t_child_p_a_p_b) (key range: c.p_a= ?:? , key filter: c.p_a is not null , key filter: c.p_b is not null )

  rewritten query: select c.a, c.b, c.p_a, c.p_b from [dba.t_child] c where c.p_a= ?:?  and c.p_b is not null  and c.p_a is not null 

Trace Statistics:
  SELECT (time: ?, fetch: ?, ioread: ?)
    SCAN (index: dba.t_child.fk_t_child_p_a_p_b), (btree time: ?, fetch: ?, ioread: ?, readkeys: ?, filteredkeys: ?, rows: ?) (lookup time: ?, rows: ?)
     

===================================================
a    b    p_a    p_b    
20     -200     2     2     

===================================================
trace    

Query Plan:
  INDEX SCAN (c.fk_t_child_p_a_p_b) (key range: c.p_a= ?:? , key filter: c.p_a is not null , key filter: c.p_b is not null )

  rewritten query: select c.a, c.b, c.p_a, c.p_b from [dba.t_child] c where c.p_a= ?:?  and c.p_b is not null  and c.p_a is not null 

Trace Statistics:
  SELECT (time: ?, fetch: ?, ioread: ?)
    SCAN (index: dba.t_child.fk_t_child_p_a_p_b), (btree time: ?, fetch: ?, ioread: ?, readkeys: ?, filteredkeys: ?, rows: ?) (lookup time: ?, rows: ?)
     

===================================================
a    b    p_a    p_b    
20     -200     2     2     

===================================================
trace    

Query Plan:
  INDEX SCAN (c.fk_t_child_p_a_p_b) (key range: c.p_a= ?:? , key filter: c.p_a is not null , key filter: c.p_b is not null )

  rewritten query: select c.a, c.b, c.p_a, c.p_b from [dba.t_child] c where c.p_a= ?:?  and c.p_b is not null  and c.p_a is not null 

Trace Statistics:
  SELECT (time: ?, fetch: ?, ioread: ?)
    SCAN (index: dba.t_child.fk_t_child_p_a_p_b), (btree time: ?, fetch: ?, ioread: ?, readkeys: ?, filteredkeys: ?, rows: ?) (lookup time: ?, rows: ?)
     

===================================================
a    b    p_a    p_b    
21     -300     3     3     

===================================================
trace    

Query Plan:
  INDEX SCAN (c.fk_t_child_p_a_p_b) (key range: c.p_b= ?:? key range: c.p_a= ?:? , key filter: c.p_b is not null , key filter: c.p_a is not null )

  rewritten query: select c.a, c.b, c.p_a, c.p_b from [dba.t_child] c where c.p_b= ?:?  and c.p_a= ?:?  and c.p_a is not null  and c.p_b is not null 

Trace Statistics:
  SELECT (time: ?, fetch: ?, ioread: ?)
    SCAN (index: dba.t_child.fk_t_child_p_a_p_b), (btree time: ?, fetch: ?, ioread: ?, readkeys: ?, filteredkeys: ?, rows: ?) (lookup time: ?, rows: ?)
     

===================================================
a    b    p_a    p_b    
21     -300     3     3     

===================================================
trace    

Query Plan:
  INDEX SCAN (c.fk_t_child_p_a_p_b) (key range: c.p_b= ?:? key range: c.p_a= ?:? , key filter: c.p_b is not null , key filter: c.p_a is not null )

  rewritten query: select c.a, c.b, c.p_a, c.p_b from [dba.t_child] c where c.p_b= ?:?  and c.p_a= ?:?  and c.p_a is not null  and c.p_b is not null 

Trace Statistics:
  SELECT (time: ?, fetch: ?, ioread: ?)
    SCAN (index: dba.t_child.fk_t_child_p_a_p_b), (btree time: ?, fetch: ?, ioread: ?, readkeys: ?, filteredkeys: ?, rows: ?) (lookup time: ?, rows: ?)
     

===================================================
a    b    p_a    p_b    
22     -400     4     4     

===================================================
trace    

Query Plan:
  INDEX SCAN (c.fk_t_child_p_a_p_b) (key range: c.p_a= ?:? , key filter: c.p_a is not null , key filter: c.p_b is not null )

  rewritten query: select c.a, c.b, c.p_a, c.p_b from [dba.t_child] c where c.p_a= ?:?  and c.p_b is not null  and c.p_a is not null 

Trace Statistics:
  SELECT (time: ?, fetch: ?, ioread: ?)
    SCAN (index: dba.t_child.fk_t_child_p_a_p_b), (btree time: ?, fetch: ?, ioread: ?, readkeys: ?, filteredkeys: ?, rows: ?) (lookup time: ?, rows: ?)
     

===================================================
a    b    p_a    p_b    
22     -400     4     4     

===================================================
trace    

Query Plan:
  INDEX SCAN (c.fk_t_child_p_a_p_b) (key range: c.p_a= ?:? , key filter: c.p_a is not null , key filter: c.p_b is not null )

  rewritten query: select c.a, c.b, c.p_a, c.p_b from [dba.t_child] c where c.p_a= ?:?  and c.p_b is not null  and c.p_a is not null 

Trace Statistics:
  SELECT (time: ?, fetch: ?, ioread: ?)
    SCAN (index: dba.t_child.fk_t_child_p_a_p_b), (btree time: ?, fetch: ?, ioread: ?, readkeys: ?, filteredkeys: ?, rows: ?) (lookup time: ?, rows: ?)
     

===================================================
a    b    p_a    p_b    
23     -500     5     5     

===================================================
trace    

Query Plan:
  TABLE SCAN (c)

  rewritten query: select c.a, c.b, c.p_a, c.p_b from [dba.t_child] c where ((c.p_a= ?:? ) or (c.p_b= ?:? )) and c.p_a is not null  and c.p_b is not null 

Trace Statistics:
  SELECT (time: ?, fetch: ?, ioread: ?)
    SCAN (table: dba.t_child), (heap time: ?, fetch: ?, ioread: ?, readrows: ?, rows: ?)
     

===================================================
a    b    p_a    p_b    
23     -500     5     5     

===================================================
trace    

Query Plan:
  TABLE SCAN (c)

  rewritten query: select c.a, c.b, c.p_a, c.p_b from [dba.t_child] c where ((c.p_a= ?:? ) or (c.p_b= ?:? )) and c.p_a is not null  and c.p_b is not null 

Trace Statistics:
  SELECT (time: ?, fetch: ?, ioread: ?)
    SCAN (table: dba.t_child), (heap time: ?, fetch: ?, ioread: ?, readrows: ?, rows: ?)
     

===================================================
a    b    p_a    p_b    
24     -600     6     6     

===================================================
trace    

Query Plan:
  NESTED LOOPS (inner join)
    TABLE SCAN (p)
    INDEX SCAN (c.fk_t_child_p_a_p_b) (key range: c.p_a=p.akey range: c.p_b=p.b)

  rewritten query: select c.a, c.b, c.p_a, c.p_b from [dba.t_parent] p, [dba.t_child] c where ((p.a= ?:? ) or (p.b= ?:? )) and c.p_a=p.a and c.p_b=p.b

Trace Statistics:
  SELECT (time: ?, fetch: ?, ioread: ?)
    SCAN (table: dba.t_parent), (heap time: ?, fetch: ?, ioread: ?, readrows: ?, rows: ?)
      SCAN (index: dba.t_child.fk_t_child_p_a_p_b), (btree time: ?, fetch: ?, ioread: ?, readkeys: ?, filteredkeys: ?, rows: ?) (lookup time: ?, rows: ?)
     

===================================================
a    b    p_a    p_b    
24     -600     6     6     

===================================================
trace    

Query Plan:
  NESTED LOOPS (inner join)
    TABLE SCAN (p)
    INDEX SCAN (c.fk_t_child_p_a_p_b) (key range: c.p_a=p.akey range: c.p_b=p.b)

  rewritten query: select c.a, c.b, c.p_a, c.p_b from [dba.t_child] c, [dba.t_parent] p where c.p_a=p.a and c.p_b=p.b and ((p.a= ?:? ) or (p.b= ?:? ))

Trace Statistics:
  SELECT (time: ?, fetch: ?, ioread: ?)
    SCAN (table: dba.t_parent), (heap time: ?, fetch: ?, ioread: ?, readrows: ?, rows: ?)
      SCAN (index: dba.t_child.fk_t_child_p_a_p_b), (btree time: ?, fetch: ?, ioread: ?, readkeys: ?, filteredkeys: ?, rows: ?) (lookup time: ?, rows: ?)
     

===================================================
a    b    p_a    p_b    
25     -700     7     7     

===================================================
trace    

Query Plan:
  INDEX SCAN (c.fk_t_child_p_a_p_b) (key range: c.p_a=( cast(? as numeric(?,?))), key filter: c.p_a is not null , key filter: c.p_b is not null )

  rewritten query: select c.a, c.b, c.p_a, c.p_b from [dba.t_child] c where c.p_a=( cast(? as numeric(?,?))) and c.p_b is not null  and c.p_a is not null 

Trace Statistics:
  SELECT (time: ?, fetch: ?, ioread: ?)
    SCAN (index: dba.t_child.fk_t_child_p_a_p_b), (btree time: ?, fetch: ?, ioread: ?, readkeys: ?, filteredkeys: ?, rows: ?) (lookup time: ?, rows: ?)
     

===================================================
a    b    p_a    p_b    
25     -700     7     7     

===================================================
trace    

Query Plan:
  INDEX SCAN (c.fk_t_child_p_a_p_b) (key range: c.p_a=( cast(? as numeric(?,?))), key filter: c.p_a is not null , key filter: c.p_b is not null )

  rewritten query: select c.a, c.b, c.p_a, c.p_b from [dba.t_child] c where c.p_a=( cast(? as numeric(?,?))) and c.p_b is not null  and c.p_a is not null 

Trace Statistics:
  SELECT (time: ?, fetch: ?, ioread: ?)
    SCAN (index: dba.t_child.fk_t_child_p_a_p_b), (btree time: ?, fetch: ?, ioread: ?, readkeys: ?, filteredkeys: ?, rows: ?) (lookup time: ?, rows: ?)
     

===================================================
a    b    p_a    p_b    
26     -800     8     8     
27     -900     9     9     

===================================================
trace    

Query Plan:
  NESTED LOOPS (inner join)
    INDEX SCAN (p.pk_t_parent_a_b) (key range: (p.a>= ?:? ), covered: true)
    INDEX SCAN (c.fk_t_child_p_a_p_b) (key range: c.p_a=p.akey range: c.p_b=p.b)

  rewritten query: select c.a, c.b, c.p_a, c.p_b from [dba.t_parent] p, [dba.t_child] c where (p.a>= ?:? ) and c.p_a=p.a and c.p_b=p.b

Trace Statistics:
  SELECT (time: ?, fetch: ?, ioread: ?)
    SCAN (index: dba.t_parent.pk_t_parent_a_b), (btree time: ?, fetch: ?, ioread: ?, readkeys: ?, filteredkeys: ?, rows: ?, covered: true)
      SCAN (index: dba.t_child.fk_t_child_p_a_p_b), (btree time: ?, fetch: ?, ioread: ?, readkeys: ?, filteredkeys: ?, rows: ?) (lookup time: ?, rows: ?)
     

===================================================
a    b    p_a    p_b    
26     -800     8     8     
27     -900     9     9     

===================================================
trace    

Query Plan:
  NESTED LOOPS (inner join)
    INDEX SCAN (p.pk_t_parent_a_b) (key range: (p.a>= ?:? ), covered: true)
    INDEX SCAN (c.fk_t_child_p_a_p_b) (key range: c.p_a=p.akey range: c.p_b=p.b)

  rewritten query: select c.a, c.b, c.p_a, c.p_b from [dba.t_child] c, [dba.t_parent] p where c.p_a=p.a and c.p_b=p.b and (p.a>= ?:? )

Trace Statistics:
  SELECT (time: ?, fetch: ?, ioread: ?)
    SCAN (index: dba.t_parent.pk_t_parent_a_b), (btree time: ?, fetch: ?, ioread: ?, readkeys: ?, filteredkeys: ?, rows: ?, covered: true)
      SCAN (index: dba.t_child.fk_t_child_p_a_p_b), (btree time: ?, fetch: ?, ioread: ?, readkeys: ?, filteredkeys: ?, rows: ?) (lookup time: ?, rows: ?)
     

===================================================
a    b    p_a    p_b    
19     -100     1     1     
21     -300     3     3     
23     -500     5     5     
25     -700     7     7     
27     -900     9     9     

===================================================
trace    

Query Plan:
  NESTED LOOPS (inner join)
    INDEX SCAN (p.pk_t_parent_a_b) (key range: ((p.a= ?:? ) or (p.a= ?:? ) or (p.a= ?:? ) or (p.a= ?:? ) or (p.a= ?:? )), covered: true)
    INDEX SCAN (c.fk_t_child_p_a_p_b) (key range: c.p_a=p.akey range: c.p_b=p.b)

  rewritten query: select c.a, c.b, c.p_a, c.p_b from [dba.t_parent] p, [dba.t_child] c where ((p.a= ?:? ) or (p.a= ?:? ) or (p.a= ?:? ) or (p.a= ?:? ) or (p.a= ?:? )) and c.p_a=p.a and c.p_b=p.b

Trace Statistics:
  SELECT (time: ?, fetch: ?, ioread: ?)
    SCAN (index: dba.t_parent.pk_t_parent_a_b), (btree time: ?, fetch: ?, ioread: ?, readkeys: ?, filteredkeys: ?, rows: ?, covered: true)
      SCAN (index: dba.t_child.fk_t_child_p_a_p_b), (btree time: ?, fetch: ?, ioread: ?, readkeys: ?, filteredkeys: ?, rows: ?) (lookup time: ?, rows: ?)
     

===================================================
a    b    p_a    p_b    
19     -100     1     1     
21     -300     3     3     
23     -500     5     5     
25     -700     7     7     
27     -900     9     9     

===================================================
trace    

Query Plan:
  NESTED LOOPS (inner join)
    INDEX SCAN (p.pk_t_parent_a_b) (key range: ((p.a= ?:? ) or (p.a= ?:? ) or (p.a= ?:? ) or (p.a= ?:? ) or (p.a= ?:? )), covered: true)
    INDEX SCAN (c.fk_t_child_p_a_p_b) (key range: c.p_a=p.akey range: c.p_b=p.b)

  rewritten query: select c.a, c.b, c.p_a, c.p_b from [dba.t_child] c, [dba.t_parent] p where c.p_a=p.a and c.p_b=p.b and ((p.a= ?:? ) or (p.a= ?:? ) or (p.a= ?:? ) or (p.a= ?:? ) or (p.a= ?:? ))

Trace Statistics:
  SELECT (time: ?, fetch: ?, ioread: ?)
    SCAN (index: dba.t_parent.pk_t_parent_a_b), (btree time: ?, fetch: ?, ioread: ?, readkeys: ?, filteredkeys: ?, rows: ?, covered: true)
      SCAN (index: dba.t_child.fk_t_child_p_a_p_b), (btree time: ?, fetch: ?, ioread: ?, readkeys: ?, filteredkeys: ?, rows: ?) (lookup time: ?, rows: ?)
     

===================================================
a    b    p_a    p_b    
20     -200     2     2     
21     -300     3     3     
22     -400     4     4     

===================================================
trace    

Query Plan:
  NESTED LOOPS (inner join)
    INDEX SCAN (p.pk_t_parent_a_b) (key range: (p.a>= ?:?  and p.a<= ?:? ), covered: true)
    INDEX SCAN (c.fk_t_child_p_a_p_b) (key range: c.p_a=p.akey range: c.p_b=p.b)

  rewritten query: select c.a, c.b, c.p_a, c.p_b from [dba.t_parent] p, [dba.t_child] c where (p.a>= ?:?  and p.a<= ?:? ) and c.p_a=p.a and c.p_b=p.b

Trace Statistics:
  SELECT (time: ?, fetch: ?, ioread: ?)
    SCAN (index: dba.t_parent.pk_t_parent_a_b), (btree time: ?, fetch: ?, ioread: ?, readkeys: ?, filteredkeys: ?, rows: ?, covered: true)
      SCAN (index: dba.t_child.fk_t_child_p_a_p_b), (btree time: ?, fetch: ?, ioread: ?, readkeys: ?, filteredkeys: ?, rows: ?) (lookup time: ?, rows: ?)
     

===================================================
a    b    p_a    p_b    
20     -200     2     2     
21     -300     3     3     
22     -400     4     4     

===================================================
trace    

Query Plan:
  NESTED LOOPS (inner join)
    INDEX SCAN (p.pk_t_parent_a_b) (key range: (p.a>= ?:?  and p.a<= ?:? ), covered: true)
    INDEX SCAN (c.fk_t_child_p_a_p_b) (key range: c.p_a=p.akey range: c.p_b=p.b)

  rewritten query: select c.a, c.b, c.p_a, c.p_b from [dba.t_child] c, [dba.t_parent] p where c.p_a=p.a and c.p_b=p.b and (p.a>= ?:?  and p.a<= ?:? )

Trace Statistics:
  SELECT (time: ?, fetch: ?, ioread: ?)
    SCAN (index: dba.t_parent.pk_t_parent_a_b), (btree time: ?, fetch: ?, ioread: ?, readkeys: ?, filteredkeys: ?, rows: ?, covered: true)
      SCAN (index: dba.t_child.fk_t_child_p_a_p_b), (btree time: ?, fetch: ?, ioread: ?, readkeys: ?, filteredkeys: ?, rows: ?) (lookup time: ?, rows: ?)
     

===================================================
a    b    p_a    p_b    
27     -900     9     9     

===================================================
trace    

Query Plan:
  INDEX SCAN (dba.t_parent.pk_t_parent_a_b) (, covered: true, desc_index: true)
  skip order by: true

  rewritten query: (select [dba.t_parent].a from [dba.t_parent] [dba.t_parent] order by ? desc  for orderby_num()<= ?:? )

  NESTED LOOPS (inner join)
    INDEX SCAN (p.pk_t_parent_a_b) (key range: p.a=(select [dba.t_parent].a from [dba.t_parent] [dba.t_parent] order by ? desc  for orderby_num()<= ?:? ), covered: true)
    INDEX SCAN (c.fk_t_child_p_a_p_b) (key range: c.p_a=p.akey range: c.p_b=p.b)

  rewritten query: select c.a, c.b, c.p_a, c.p_b from [dba.t_parent] p, [dba.t_child] c where p.a=(select [dba.t_parent].a from [dba.t_parent] [dba.t_parent] order by ? desc  for orderby_num()<= ?:? ) and c.p_a=p.a and c.p_b=p.b


Trace Statistics:
  SELECT (time: ?, fetch: ?, ioread: ?)
    SCAN (index: dba.t_parent.pk_t_parent_a_b), (btree time: ?, fetch: ?, ioread: ?, readkeys: ?, filteredkeys: ?, rows: ?, covered: true)
      SCAN (index: dba.t_child.fk_t_child_p_a_p_b), (btree time: ?, fetch: ?, ioread: ?, readkeys: ?, filteredkeys: ?, rows: ?) (lookup time: ?, rows: ?)
    SUBQUERY (uncorrelated)
      SELECT (time: ?, fetch: ?, ioread: ?)
        SCAN (index: dba.t_parent.pk_t_parent_a_b), (btree time: ?, fetch: ?, ioread: ?, readkeys: ?, filteredkeys: ?, rows: ?, covered: true)
     

===================================================
a    b    p_a    p_b    
27     -900     9     9     

===================================================
trace    

Query Plan:
  INDEX SCAN (dba.t_parent.pk_t_parent_a_b) (, covered: true, desc_index: true)
  skip order by: true

  rewritten query: (select [dba.t_parent].a from [dba.t_parent] [dba.t_parent] order by ? desc  for orderby_num()<= ?:? )

  NESTED LOOPS (inner join)
    INDEX SCAN (p.pk_t_parent_a_b) (key range: p.a=(select [dba.t_parent].a from [dba.t_parent] [dba.t_parent] order by ? desc  for orderby_num()<= ?:? ), covered: true)
    INDEX SCAN (c.fk_t_child_p_a_p_b) (key range: c.p_a=p.akey range: c.p_b=p.b)

  rewritten query: select c.a, c.b, c.p_a, c.p_b from [dba.t_child] c, [dba.t_parent] p where c.p_a=p.a and c.p_b=p.b and p.a=(select [dba.t_parent].a from [dba.t_parent] [dba.t_parent] order by ? desc  for orderby_num()<= ?:? )


Trace Statistics:
  SELECT (time: ?, fetch: ?, ioread: ?)
    SCAN (index: dba.t_parent.pk_t_parent_a_b), (btree time: ?, fetch: ?, ioread: ?, readkeys: ?, filteredkeys: ?, rows: ?, covered: true)
      SCAN (index: dba.t_child.fk_t_child_p_a_p_b), (btree time: ?, fetch: ?, ioread: ?, readkeys: ?, filteredkeys: ?, rows: ?) (lookup time: ?, rows: ?)
    SUBQUERY (uncorrelated)
      SELECT (time: ?, fetch: ?, ioread: ?)
        SCAN (index: dba.t_parent.pk_t_parent_a_b), (btree time: ?, fetch: ?, ioread: ?, readkeys: ?, filteredkeys: ?, rows: ?, covered: true)
     

===================================================
0
===================================================
0
===================================================
0

===================================================
0
===================================================
0
===================================================
0
===================================================
0
===================================================
0
===================================================
0
===================================================
9
===================================================
9
===================================================
9
===================================================
9
===================================================
9
===================================================
9
===================================================
0
===================================================
0
===================================================
a    b    p_a    a    b    p_a    
12     -6000     3     11     -6000     2     

===================================================
trace    

Query Plan:
  NESTED LOOPS (inner join)
    INDEX SCAN (c?.fk_t_child_?_p_a) (key range: c?.p_a= ?:? , key filter: c?.p_a is not null )
    INDEX SCAN (c?.fk_t_child_?_p_a) (key range: c?.p_a= ?:? , key filter: c?.p_a is not null )

  rewritten query: select c?.a, c?.b, c?.p_a, c?.a, c?.b, c?.p_a from [dba.t_child_?] c?, [dba.t_child_?] c? where c?.b=c?.b and c?.p_a= ?:?  and c?.p_a= ?:?  and c?.p_a is not null  and c?.p_a is not null 

Trace Statistics:
  SELECT (time: ?, fetch: ?, ioread: ?)
    SCAN (index: dba.t_child_?.fk_t_child_?_p_a), (btree time: ?, fetch: ?, ioread: ?, readkeys: ?, filteredkeys: ?, rows: ?) (lookup time: ?, rows: ?)
      SCAN (index: dba.t_child_?.fk_t_child_?_p_a), (btree time: ?, fetch: ?, ioread: ?, readkeys: ?, filteredkeys: ?, rows: ?) (lookup time: ?, rows: ?)
     

===================================================
a    b    p_a    a    b    p_a    
12     -6000     3     11     -6000     2     

===================================================
trace    

Query Plan:
  NESTED LOOPS (inner join)
    INDEX SCAN (c?.fk_t_child_?_p_a) (key range: c?.p_a= ?:? , key filter: c?.p_a is not null )
    INDEX SCAN (c?.fk_t_child_?_p_a) (key range: c?.p_a= ?:? , key filter: c?.p_a is not null )

  rewritten query: select c?.a, c?.b, c?.p_a, c?.a, c?.b, c?.p_a from [dba.t_child_?] c?, [dba.t_child_?] c? where c?.b=c?.b and c?.p_a= ?:?  and c?.p_a= ?:?  and c?.p_a is not null  and c?.p_a is not null 

Trace Statistics:
  SELECT (time: ?, fetch: ?, ioread: ?)
    SCAN (index: dba.t_child_?.fk_t_child_?_p_a), (btree time: ?, fetch: ?, ioread: ?, readkeys: ?, filteredkeys: ?, rows: ?) (lookup time: ?, rows: ?)
      SCAN (index: dba.t_child_?.fk_t_child_?_p_a), (btree time: ?, fetch: ?, ioread: ?, readkeys: ?, filteredkeys: ?, rows: ?) (lookup time: ?, rows: ?)
     

===================================================
a    b    p_a    a    b    p_a    
12     -6000     3     12     -6000     3     
18     -18000     9     18     -18000     9     

===================================================
trace    

Query Plan:
  NESTED LOOPS (inner join)
    TABLE SCAN (a)
    TABLE SCAN (b)

  rewritten query: select a.a, a.b, a.p_a, b.a, b.b, b.p_a from [dba.t_child_?] a, [dba.t_child_?] b where (a.a mod ?=?) and (b.a mod ?=?) and a.b=b.b and a.p_a is not null  and b.p_a is not null 

Trace Statistics:
  SELECT (time: ?, fetch: ?, ioread: ?)
    SCAN (table: dba.t_child_?), (heap time: ?, fetch: ?, ioread: ?, readrows: ?, rows: ?)
      SCAN (table: dba.t_child_?), (heap time: ?, fetch: ?, ioread: ?, readrows: ?, rows: ?)
     

===================================================
a    b    p_a    a    b    p_a    
12     -6000     3     12     -6000     3     
18     -18000     9     18     -18000     9     

===================================================
trace    

Query Plan:
  NESTED LOOPS (inner join)
    TABLE SCAN (a)
    TABLE SCAN (b)

  rewritten query: select a.a, a.b, a.p_a, b.a, b.b, b.p_a from [dba.t_child_?] a, [dba.t_child_?] b where (a.b=b.b) and a.a mod ?=? and b.a mod ?=? and a.p_a is not null  and b.p_a is not null 

Trace Statistics:
  SELECT (time: ?, fetch: ?, ioread: ?)
    SCAN (table: dba.t_child_?), (heap time: ?, fetch: ?, ioread: ?, readrows: ?, rows: ?)
      SCAN (table: dba.t_child_?), (heap time: ?, fetch: ?, ioread: ?, readrows: ?, rows: ?)
     

===================================================
a    b    p_a    a    b    p_a    
12     -6000     3     12     -6000     3     
18     -18000     9     18     -18000     9     

===================================================
trace    

Query Plan:
  NESTED LOOPS (inner join)
    TABLE SCAN (a)
    TABLE SCAN (b)

  rewritten query: select a.a, a.b, a.p_a, b.a, b.b, b.p_a from [dba.t_child_?] a, [dba.t_child_?] b where (a.a mod ?=?) and (b.a mod ?=?) and a.b=b.b and a.p_a is not null  and b.p_a is not null 

Trace Statistics:
  SELECT (time: ?, fetch: ?, ioread: ?)
    SCAN (table: dba.t_child_?), (heap time: ?, fetch: ?, ioread: ?, readrows: ?, rows: ?)
      SCAN (table: dba.t_child_?), (heap time: ?, fetch: ?, ioread: ?, readrows: ?, rows: ?)
     

===================================================
a    b    p_a    a    b    p_a    
12     -6000     3     12     -6000     3     
18     -18000     9     18     -18000     9     

===================================================
trace    

Query Plan:
  NESTED LOOPS (inner join)
    TABLE SCAN (a)
    TABLE SCAN (b)

  rewritten query: select a.a, a.b, a.p_a, b.a, b.b, b.p_a from [dba.t_child_?] a, [dba.t_child_?] b where (a.b=b.b) and a.a mod ?=? and b.a mod ?=? and a.p_a is not null  and b.p_a is not null 

Trace Statistics:
  SELECT (time: ?, fetch: ?, ioread: ?)
    SCAN (table: dba.t_child_?), (heap time: ?, fetch: ?, ioread: ?, readrows: ?, rows: ?)
      SCAN (table: dba.t_child_?), (heap time: ?, fetch: ?, ioread: ?, readrows: ?, rows: ?)
     

===================================================
a    b    p_a    
16     -14000     7     

===================================================
trace    

Query Plan:
  NESTED LOOPS (inner join)
    INDEX SCAN (c.fk_t_child_?_p_a) (key range: c.p_a= ?:? , key filter: c.p_a is not null )
    INDEX SCAN (p?.pk_t_parent_?_a) (key range: c.p_a=p?.a, key filter: ((p?.a= ?:? ) or (p?.a= ?:? ) or (p?.a= ?:? )), covered: true)

  rewritten query: select /*+ ORDERED */ c.a, c.b, c.p_a from [dba.t_child_?] c inner join [dba.t_parent_?] p? on c.p_a= ?:?  and c.p_a=p?.a where ((p?.a= ?:? ) or (p?.a= ?:? ) or (p?.a= ?:? )) and c.p_a is not null 

Trace Statistics:
  SELECT (time: ?, fetch: ?, ioread: ?)
    SCAN (index: dba.t_child_?.fk_t_child_?_p_a), (btree time: ?, fetch: ?, ioread: ?, readkeys: ?, filteredkeys: ?, rows: ?) (lookup time: ?, rows: ?)
      SCAN (index: dba.t_parent_?.pk_t_parent_?_a), (btree time: ?, fetch: ?, ioread: ?, readkeys: ?, filteredkeys: ?, rows: ?, covered: true)
     

===================================================
a    b    p_a    
16     -14000     7     

===================================================
trace    

Query Plan:
  NESTED LOOPS (inner join)
    NESTED LOOPS (cross join)
      INDEX SCAN (c.fk_t_child_?_p_a) (key range: c.p_a= ?:? )
      INDEX SCAN (p?.pk_t_parent_?_a) (key range: p?.a= ?:? , covered: true)
    INDEX SCAN (p?.pk_t_parent_?_a) (key range: c.p_a=p?.a, key filter: ((p?.a= ?:? ) or (p?.a= ?:? ) or (p?.a= ?:? )), covered: true)

  rewritten query: select /*+ ORDERED NO_ELIMINATE_JOIN */ c.a, c.b, c.p_a from [dba.t_child_?] c inner join [dba.t_parent_?] p? on c.p_a=p?.a and c.p_a= ?:?  inner join [dba.t_parent_?] p? on c.p_a=p?.a where ((p?.a= ?:? ) or (p?.a= ?:? ) or (p?.a= ?:? )) and p?.a= ?:? 

Trace Statistics:
  SELECT (time: ?, fetch: ?, ioread: ?)
    SCAN (index: dba.t_child_?.fk_t_child_?_p_a), (btree time: ?, fetch: ?, ioread: ?, readkeys: ?, filteredkeys: ?, rows: ?) (lookup time: ?, rows: ?)
      SCAN (index: dba.t_parent_?.pk_t_parent_?_a), (btree time: ?, fetch: ?, ioread: ?, readkeys: ?, filteredkeys: ?, rows: ?, covered: true)
        SCAN (index: dba.t_parent_?.pk_t_parent_?_a), (btree time: ?, fetch: ?, ioread: ?, readkeys: ?, filteredkeys: ?, rows: ?, covered: true)
     

===================================================
a    b    p_a    
16     -14000     7     

===================================================
trace    

Query Plan:
  INDEX SCAN (c.fk_t_child_?_p_a) (key range: c.p_a= ?:? , key filter: c.p_a is not null )

  rewritten query: select /*+ ORDERED */ c.a, c.b, c.p_a from [dba.t_child_?] c where c.p_a= ?:?  and c.p_a is not null 

Trace Statistics:
  SELECT (time: ?, fetch: ?, ioread: ?)
    SCAN (index: dba.t_child_?.fk_t_child_?_p_a), (btree time: ?, fetch: ?, ioread: ?, readkeys: ?, filteredkeys: ?, rows: ?) (lookup time: ?, rows: ?)
     

===================================================
a    b    p_a    
16     -14000     7     

===================================================
trace    

Query Plan:
  NESTED LOOPS (cross join)
    NESTED LOOPS (cross join)
      INDEX SCAN (c.fk_t_child_?_p_a) (key range: c.p_a= ?:? )
      INDEX SCAN (p?.pk_t_parent_?_a) (key range: p?.a= ?:? , covered: true)
    INDEX SCAN (p?.pk_t_parent_?_a) (key range: p?.a= ?:? , covered: true)

  rewritten query: select /*+ ORDERED NO_ELIMINATE_JOIN */ c.a, c.b, c.p_a from [dba.t_child_?] c, [dba.t_parent_?] p?, [dba.t_parent_?] p? where p?.a= ?:?  and c.p_a= ?:?  and p?.a= ?:?  and c.p_a=p?.a and c.p_a=p?.a

Trace Statistics:
  SELECT (time: ?, fetch: ?, ioread: ?)
    SCAN (index: dba.t_child_?.fk_t_child_?_p_a), (btree time: ?, fetch: ?, ioread: ?, readkeys: ?, filteredkeys: ?, rows: ?) (lookup time: ?, rows: ?)
      SCAN (index: dba.t_parent_?.pk_t_parent_?_a), (btree time: ?, fetch: ?, ioread: ?, readkeys: ?, filteredkeys: ?, rows: ?, covered: true)
        SCAN (index: dba.t_parent_?.pk_t_parent_?_a), (btree time: ?, fetch: ?, ioread: ?, readkeys: ?, filteredkeys: ?, rows: ?, covered: true)
     

===================================================
a    b    p_a    
17     -16000     8     

===================================================
trace    

Query Plan:
  INDEX SCAN (t.fk_t_child_?_p_a) (key range: (t.p_a= ?:? ), key filter: t.p_a is not null )

  rewritten query: select t.a, t.b, t.p_a from [dba.t_child_?] t where (t.p_a= ?:? ) and t.p_a is not null 

Trace Statistics:
  SELECT (time: ?, fetch: ?, ioread: ?)
    SCAN (index: dba.t_child_?.fk_t_child_?_p_a), (btree time: ?, fetch: ?, ioread: ?, readkeys: ?, filteredkeys: ?, rows: ?) (lookup time: ?, rows: ?)
     

===================================================
a    b    p_a    
17     -16000     8     

===================================================
trace    

Query Plan:
  INDEX SCAN (t.fk_t_child_?_p_a) (key range: (t.p_a= ?:? ), key filter: t.p_a is not null )

  rewritten query: select t.a, t.b, t.p_a from [dba.t_child_?] t where (t.p_a= ?:? ) and t.p_a is not null 

Trace Statistics:
  SELECT (time: ?, fetch: ?, ioread: ?)
    SCAN (index: dba.t_child_?.fk_t_child_?_p_a), (btree time: ?, fetch: ?, ioread: ?, readkeys: ?, filteredkeys: ?, rows: ?) (lookup time: ?, rows: ?)
     

===================================================
a    b    p_a    
18     -18000     9     

===================================================
trace    

Query Plan:
  INDEX SCAN (t.fk_t_child_?_p_a) (key range: (t.p_a> ?:? ), key filter: t.p_a is not null )

  rewritten query: select t.a, t.b, t.p_a from [dba.t_child_?] t where (t.p_a> ?:? ) and t.p_a is not null 

Trace Statistics:
  SELECT (time: ?, fetch: ?, ioread: ?)
    SCAN (index: dba.t_child_?.fk_t_child_?_p_a), (btree time: ?, fetch: ?, ioread: ?, readkeys: ?, filteredkeys: ?, rows: ?) (lookup time: ?, rows: ?)
     

===================================================
a    b    p_a    
18     -18000     9     

===================================================
trace    

Query Plan:
  INDEX SCAN (t.fk_t_child_?_p_a) (key range: (t.p_a> ?:? ), key filter: t.p_a is not null )

  rewritten query: select t.a, t.b, t.p_a from [dba.t_child_?] t where (t.p_a> ?:? ) and t.p_a is not null 

Trace Statistics:
  SELECT (time: ?, fetch: ?, ioread: ?)
    SCAN (index: dba.t_child_?.fk_t_child_?_p_a), (btree time: ?, fetch: ?, ioread: ?, readkeys: ?, filteredkeys: ?, rows: ?) (lookup time: ?, rows: ?)
     

===================================================
0
===================================================
0
===================================================
0

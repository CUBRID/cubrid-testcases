===================================================
0
===================================================
0
===================================================
1
===================================================
1
===================================================
1
===================================================
a    b    count(foo.c)    
1     1     3     

Query plan:
temp(group by)
    subplan: sscan
                 class: foo node[?]
                 cost:  ? card ?
    sort:  ? asc
    cost:  ? card ?
Query stmt:
(select foo.a, foo.b, count(foo.c) from foo foo group by foo.a)
Query plan:
sscan
    class: J node[?]
    cost:  ? card ?
Query stmt:
select J.a, J.b, J.[count(foo.c)] from (select foo.a, foo.b, count(foo.c) from foo foo group by foo.a) J (a, b, [count(foo.c)])
===================================================
a    b    count(foo.c)    
1     1     3     

Query plan:
temp(group by)
    subplan: sscan
                 class: foo node[?]
                 cost:  ? card ?
    sort:  ? asc
    cost:  ? card ?
Query stmt:
(select foo.a, foo.b, count(foo.c) from foo foo group by foo.a having foo.b= ?:? )
Query plan:
sscan
    class: J node[?]
    cost:  ? card ?
Query stmt:
select J.a, J.b, J.[count(foo.c)] from (select foo.a, foo.b, count(foo.c) from foo foo group by foo.a having foo.b= ?:? ) J (a, b, [count(foo.c)])
===================================================
a    b    count(c)    
1     1     3     

Query plan:
temp(group by)
    subplan: sscan
                 class: foo node[?]
                 cost:  ? card ?
    sort:  ? asc
    cost:  ? card ?
Query stmt:
select foo.a, foo.b, count(foo.c) from foo foo group by foo.a having foo.b= ?:? 
===================================================
a    b    count(c)    
1     1     3     

Query plan:
temp(group by)
    subplan: sscan
                 class: foo node[?]
                 sargs: term[?]
                 cost:  ? card ?
    sort:  ? asc
    cost:  ? card ?
Query stmt:
select foo.a, foo.b, count(foo.c) from foo foo where foo.a= ?:?  group by foo.a
===================================================
a    b    count(c)    
1     1     1     

Query plan:
temp(group by)
    subplan: sscan
                 class: foo node[?]
                 sargs: term[?]
                 cost:  ? card ?
    sort:  ? asc, ? asc
    cost:  ? card ?
Query stmt:
select foo.a, foo.b, count(foo.c) from foo foo where foo.a=foo.b group by foo.a, foo.b
===================================================
a    b    count(c)    
1     1     3     

Query plan:
temp(group by)
    subplan: sscan
                 class: foo node[?]
                 cost:  ? card ?
    sort:  ? asc
    cost:  ? card ?
Query stmt:
select foo.a, foo.b, count(foo.c) from foo foo group by foo.a having foo.a=foo.b
===================================================
a    b    count(c)    
1     1     3     

Query plan:
temp(group by)
    subplan: sscan
                 class: foo node[?]
                 cost:  ? card ?
    sort:  ? asc
    cost:  ? card ?
Query stmt:
select foo.a, foo.b, count(foo.c) from foo foo group by foo.a having foo.b=foo.a
===================================================
a    b    count(c)    

Query plan:
temp(group by)
    subplan: sscan
                 class: foo node[?]
                 sargs: term[?]
                 cost:  ? card ?
    sort:  ? asc, ? asc
    cost:  ? card ?
Query stmt:
select foo.a, foo.b, count(foo.c) from foo foo where foo.a=foo.b+? group by foo.a, foo.b
===================================================
a    b    count(c)    

Query plan:
temp(group by)
    subplan: sscan
                 class: foo node[?]
                 cost:  ? card ?
    sort:  ? asc, ? asc
    cost:  ? card ?
Query stmt:
select foo.a, foo.b, count(foo.c) from foo foo group by foo.a, foo.b having foo.a=foo.b+foo.c
===================================================
a    b    count(c)    
1     1     3     

Query plan:
temp(group by)
    subplan: sscan
                 class: foo node[?]
                 cost:  ? card ?
    sort:  ? asc
    cost:  ? card ?
Query stmt:
select foo.a, foo.b, count(foo.c) from foo foo group by foo.a having (foo.a>=foo.a and foo.a<=foo.b)
===================================================
a    b    count(c)    
1     1     1     
1     2     1     
1     3     1     

Query plan:
temp(group by)
    subplan: sscan
                 class: foo node[?]
                 sargs: term[?]
                 cost:  ? card ?
    sort:  ? asc, ? asc
    cost:  ? card ?
Query stmt:
select foo.a, foo.b, count(foo.c) from foo foo where (foo.a>=foo.a and foo.a<=foo.b) group by foo.a, foo.b
===================================================
a    b    count(c)    
1     1     3     

Query plan:
temp(group by)
    subplan: sscan
                 class: foo node[?]
                 cost:  ? card ?
    sort:  ? asc
    cost:  ? card ?
Query stmt:
select foo.a, foo.b, count(foo.c) from foo foo group by foo.a having count(foo.a)<>?
===================================================
1
===================================================
a    b    count(c)    
1     1     2     

Query plan:
temp(group by)
    subplan: sscan
                 class: foo node[?]
                 sargs: term[?]
                 cost:  ? card ?
    sort:  ? asc, ? asc
    cost:  ? card ?
Query stmt:
select foo.a, foo.b, count(foo.c) from foo foo where foo.a=foo.b group by foo.a, foo.b
===================================================
1
===================================================
1
===================================================
a    b    count(c)    
1     0     2     

Query plan:
temp(group by)
    subplan: sscan
                 class: foo node[?]
                 sargs: term[?]
                 cost:  ? card ?
    sort:  ? asc, ? asc
    cost:  ? card ?
Query stmt:
select foo.a, foo.b, count(foo.c) from foo foo where foo.a=foo.b+? group by foo.a, foo.b
===================================================
1
===================================================
1
===================================================
a    b    count(c)    
2     0     2     

Query plan:
temp(group by)
    subplan: sscan
                 class: foo node[?]
                 cost:  ? card ?
    sort:  ? asc, ? asc
    cost:  ? card ?
Query stmt:
select foo.a, foo.b, count(foo.c) from foo foo group by foo.a, foo.b having foo.a= cast(foo.b as bigint)+count(foo.c)
===================================================
0
===================================================
0
===================================================
1
===================================================
1
===================================================
1
===================================================
a    b    count(foo.c)    
1     3     3     

Query plan:
temp(group by)
    subplan: sscan
                 class: foo node[?]
                 cost:  ? card ?
    sort:  ? asc
    cost:  ? card ?
Query stmt:
(select foo.a, foo.b, count(foo.c) from foo foo group by foo.a)
Query plan:
sscan
    class: J node[?]
    cost:  ? card ?
Query stmt:
select J.a, J.b, J.[count(foo.c)] from (select foo.a, foo.b, count(foo.c) from foo foo group by foo.a) J (a, b, [count(foo.c)])
===================================================
a    b    count(foo.c)    

Query plan:
temp(group by)
    subplan: sscan
                 class: foo node[?]
                 cost:  ? card ?
    sort:  ? asc
    cost:  ? card ?
Query stmt:
(select foo.a, foo.b, count(foo.c) from foo foo group by foo.a having foo.b= ?:? )
Query plan:
sscan
    class: J node[?]
    cost:  ? card ?
Query stmt:
select J.a, J.b, J.[count(foo.c)] from (select foo.a, foo.b, count(foo.c) from foo foo group by foo.a having foo.b= ?:? ) J (a, b, [count(foo.c)])
===================================================
a    b    count(foo.c)    
1     3     3     

Query plan:
temp(group by)
    subplan: sscan
                 class: foo node[?]
                 sargs: term[?]
                 cost:  ? card ?
    sort:  ? asc
    cost:  ? card ?
Query stmt:
(select foo.a, foo.b, count(foo.c) from foo foo where foo.a= ?:?  group by foo.a)
Query plan:
sscan
    class: J node[?]
    cost:  ? card ?
Query stmt:
select J.a, J.b, J.[count(foo.c)] from (select foo.a, foo.b, count(foo.c) from foo foo where foo.a= ?:?  group by foo.a) J (a, b, [count(foo.c)])
===================================================
a    b    count(c)    

Query plan:
temp(group by)
    subplan: sscan
                 class: foo node[?]
                 cost:  ? card ?
    sort:  ? asc
    cost:  ? card ?
Query stmt:
select foo.a, foo.b, count(foo.c) from foo foo group by foo.a having foo.b= ?:? 
===================================================
a    b    count(c)    
1     3     3     

Query plan:
temp(group by)
    subplan: sscan
                 class: foo node[?]
                 sargs: term[?]
                 cost:  ? card ?
    sort:  ? asc
    cost:  ? card ?
Query stmt:
select foo.a, foo.b, count(foo.c) from foo foo where foo.a= ?:?  group by foo.a
===================================================
a    b    count(c)    
1     1     1     

Query plan:
temp(group by)
    subplan: sscan
                 class: foo node[?]
                 sargs: term[?]
                 cost:  ? card ?
    sort:  ? asc, ? asc
    cost:  ? card ?
Query stmt:
select foo.a, foo.b, count(foo.c) from foo foo where foo.a=foo.b group by foo.a, foo.b
===================================================
a    b    count(c)    

Query plan:
temp(group by)
    subplan: sscan
                 class: foo node[?]
                 cost:  ? card ?
    sort:  ? asc
    cost:  ? card ?
Query stmt:
select foo.a, foo.b, count(foo.c) from foo foo group by foo.a having foo.a=foo.b
===================================================
a    b    count(c)    

Query plan:
temp(group by)
    subplan: sscan
                 class: foo node[?]
                 cost:  ? card ?
    sort:  ? asc
    cost:  ? card ?
Query stmt:
select foo.a, foo.b, count(foo.c) from foo foo group by foo.a having foo.b=foo.a
===================================================
a    b    count(c)    

Query plan:
temp(group by)
    subplan: sscan
                 class: foo node[?]
                 sargs: term[?]
                 cost:  ? card ?
    sort:  ? asc, ? asc
    cost:  ? card ?
Query stmt:
select foo.a, foo.b, count(foo.c) from foo foo where foo.a=foo.b+? group by foo.a, foo.b
===================================================
a    b    count(c)    

Query plan:
temp(group by)
    subplan: sscan
                 class: foo node[?]
                 cost:  ? card ?
    sort:  ? asc, ? asc
    cost:  ? card ?
Query stmt:
select foo.a, foo.b, count(foo.c) from foo foo group by foo.a, foo.b having foo.a=foo.b+foo.c
===================================================
a    b    count(c)    
1     3     3     

Query plan:
temp(group by)
    subplan: sscan
                 class: foo node[?]
                 cost:  ? card ?
    sort:  ? asc
    cost:  ? card ?
Query stmt:
select foo.a, foo.b, count(foo.c) from foo foo group by foo.a having (foo.a>=foo.a and foo.a<=foo.b)
===================================================
a    b    count(c)    
1     1     1     
1     2     1     
1     3     1     

Query plan:
temp(group by)
    subplan: sscan
                 class: foo node[?]
                 sargs: term[?]
                 cost:  ? card ?
    sort:  ? asc, ? asc
    cost:  ? card ?
Query stmt:
select foo.a, foo.b, count(foo.c) from foo foo where (foo.a>=foo.a and foo.a<=foo.b) group by foo.a, foo.b
===================================================
a    b    count(c)    
1     3     3     

Query plan:
temp(group by)
    subplan: sscan
                 class: foo node[?]
                 cost:  ? card ?
    sort:  ? asc
    cost:  ? card ?
Query stmt:
select foo.a, foo.b, count(foo.c) from foo foo group by foo.a having count(foo.a)<>?
===================================================
a    b    count(c)    
1     1     1     
1     2     1     
1     3     1     

Query plan:
temp(group by)
    subplan: sscan
                 class: foo node[?]
                 cost:  ? card ?
    sort:  ? asc
    cost:  ? card ?
Query stmt:
select foo.a, foo.b, count(foo.c) from foo foo group by foo.a, foo.b+? having foo.b+?>?
===================================================
1
===================================================
a    b    count(c)    
1     1     2     

Query plan:
temp(group by)
    subplan: sscan
                 class: foo node[?]
                 sargs: term[?]
                 cost:  ? card ?
    sort:  ? asc, ? asc
    cost:  ? card ?
Query stmt:
select foo.a, foo.b, count(foo.c) from foo foo where foo.a=foo.b group by foo.a, foo.b
===================================================
1
===================================================
1
===================================================
a    b    count(c)    
1     0     2     

Query plan:
temp(group by)
    subplan: sscan
                 class: foo node[?]
                 sargs: term[?]
                 cost:  ? card ?
    sort:  ? asc, ? asc
    cost:  ? card ?
Query stmt:
select foo.a, foo.b, count(foo.c) from foo foo where foo.a=foo.b+? group by foo.a, foo.b
===================================================
1
===================================================
1
===================================================
a    b    count(c)    
2     0     2     

Query plan:
temp(group by)
    subplan: sscan
                 class: foo node[?]
                 cost:  ? card ?
    sort:  ? asc, ? asc
    cost:  ? card ?
Query stmt:
select foo.a, foo.b, count(foo.c) from foo foo group by foo.a, foo.b having foo.a= cast(foo.b as bigint)+count(foo.c)
===================================================
0
===================================================
0
===================================================
1
===================================================
1
===================================================
1
===================================================
1
===================================================
1
===================================================
a    b    count(foo.c)    
1     1     3     
2     2     2     

Query plan:
temp(group by)
    subplan: sscan
                 class: foo node[?]
                 cost:  ? card ?
    sort:  ? asc
    cost:  ? card ?
Query stmt:
(select foo.a, foo.b, count(foo.c) from foo foo group by foo.a)
Query plan:
temp(order by)
    subplan: sscan
                 class: J node[?]
                 cost:  ? card ?
    sort:  ? asc, ? asc, ? asc
    cost:  ? card ?
Query stmt:
select J.a, J.b, J.[count(foo.c)] from (select foo.a, foo.b, count(foo.c) from foo foo group by foo.a) J (a, b, [count(foo.c)]) order by ?, ?, ?
===================================================
a    b    count(foo.c)    
1     1     3     

Query plan:
temp(group by)
    subplan: sscan
                 class: foo node[?]
                 cost:  ? card ?
    sort:  ? asc
    cost:  ? card ?
Query stmt:
(select foo.a, foo.b, count(foo.c) from foo foo group by foo.a having foo.b= ?:? )
Query plan:
sscan
    class: J node[?]
    cost:  ? card ?
Query stmt:
select J.a, J.b, J.[count(foo.c)] from (select foo.a, foo.b, count(foo.c) from foo foo group by foo.a having foo.b= ?:? ) J (a, b, [count(foo.c)])
===================================================
a    b    count(c)    
1     1     3     

Query plan:
temp(group by)
    subplan: sscan
                 class: foo node[?]
                 cost:  ? card ?
    sort:  ? asc
    cost:  ? card ?
Query stmt:
select foo.a, foo.b, count(foo.c) from foo foo group by foo.a having foo.b= ?:? 
===================================================
a    b    count(c)    
1     1     3     

Query plan:
temp(group by)
    subplan: sscan
                 class: foo node[?]
                 sargs: term[?]
                 cost:  ? card ?
    sort:  ? asc
    cost:  ? card ?
Query stmt:
select foo.a, foo.b, count(foo.c) from foo foo where foo.a= ?:?  group by foo.a
===================================================
a    b    count(c)    
1     1     1     
2     2     1     

Query plan:
temp(group by)
    subplan: sscan
                 class: foo node[?]
                 sargs: term[?]
                 cost:  ? card ?
    sort:  ? asc, ? asc
    cost:  ? card ?
Query stmt:
select foo.a, foo.b, count(foo.c) from foo foo where foo.a=foo.b group by foo.a, foo.b
===================================================
a    b    count(c)    
1     1     3     
2     2     2     

Query plan:
temp(group by)
    subplan: sscan
                 class: foo node[?]
                 cost:  ? card ?
    sort:  ? asc
    cost:  ? card ?
Query stmt:
select foo.a, foo.b, count(foo.c) from foo foo group by foo.a having foo.a=foo.b
===================================================
a    b    count(c)    
2     1     1     

Query plan:
temp(group by)
    subplan: sscan
                 class: foo node[?]
                 sargs: term[?]
                 cost:  ? card ?
    sort:  ? asc, ? asc
    cost:  ? card ?
Query stmt:
select foo.a, foo.b, count(foo.c) from foo foo where foo.a=foo.b+? group by foo.a, foo.b
===================================================
a    b    count(c)    

Query plan:
temp(group by)
    subplan: sscan
                 class: foo node[?]
                 cost:  ? card ?
    sort:  ? asc, ? asc
    cost:  ? card ?
Query stmt:
select foo.a, foo.b, count(foo.c) from foo foo group by foo.a, foo.b having foo.a=foo.b+foo.c
===================================================
a    b    count(c)    
1     1     3     
2     2     2     

Query plan:
temp(group by)
    subplan: sscan
                 class: foo node[?]
                 cost:  ? card ?
    sort:  ? asc
    cost:  ? card ?
Query stmt:
select foo.a, foo.b, count(foo.c) from foo foo group by foo.a having (foo.a>=foo.a and foo.a<=foo.b)
===================================================
a    b    count(c)    
1     1     1     
1     2     1     
1     3     1     
2     2     1     

Query plan:
temp(group by)
    subplan: sscan
                 class: foo node[?]
                 sargs: term[?]
                 cost:  ? card ?
    sort:  ? asc, ? asc
    cost:  ? card ?
Query stmt:
select foo.a, foo.b, count(foo.c) from foo foo where (foo.a>=foo.a and foo.a<=foo.b) group by foo.a, foo.b
===================================================
a    b    count(c)    
1     1     3     
2     2     2     

Query plan:
temp(group by)
    subplan: sscan
                 class: foo node[?]
                 cost:  ? card ?
    sort:  ? asc
    cost:  ? card ?
Query stmt:
select foo.a, foo.b, count(foo.c) from foo foo group by foo.a having count(foo.a)<>?
===================================================
a    b    count(c)    
1     1     1     
1     2     1     
1     3     1     
2     1     1     
2     2     1     

Query plan:
temp(group by)
    subplan: sscan
                 class: foo node[?]
                 cost:  ? card ?
    sort:  ? asc
    cost:  ? card ?
Query stmt:
select foo.a, foo.b, count(foo.c) from foo foo group by foo.a, foo.b+? having foo.b+?>?
===================================================
a    b    count(c)    
1     1     1     
1     2     1     
1     3     1     
2     1     1     
2     2     1     

Query plan:
temp(group by)
    subplan: sscan
                 class: foo node[?]
                 cost:  ? card ?
    sort:  ? asc
    cost:  ? card ?
Query stmt:
select foo.a, foo.b, count(foo.c) from foo foo group by foo.a, foo.b+? having foo.b+?>?
===================================================
0
===================================================
0
===================================================
0
===================================================
1
===================================================
1
===================================================
1
===================================================
1
===================================================
1
===================================================
a    b    count(foo.c)    
1     1     3     
2     1     2     

Query plan:
temp(group by)
    subplan: sscan
                 class: foo node[?]
                 cost:  ? card ?
    sort:  ? asc
    cost:  ? card ?
Query stmt:
(select foo.a, foo.b, count(foo.c) from foo foo group by foo.a)
Query plan:
temp(order by)
    subplan: sscan
                 class: J node[?]
                 cost:  ? card ?
    sort:  ? asc, ? asc, ? asc
    cost:  ? card ?
Query stmt:
select J.a, J.b, J.[count(foo.c)] from (select foo.a, foo.b, count(foo.c) from foo foo group by foo.a) J (a, b, [count(foo.c)]) order by ?, ?, ?
===================================================
a    b    count(foo.c)    
1     1     3     
2     1     2     

Query plan:
temp(group by)
    subplan: sscan
                 class: foo node[?]
                 cost:  ? card ?
    sort:  ? asc
    cost:  ? card ?
Query stmt:
(select foo.a, foo.b, count(foo.c) from foo foo group by foo.a having foo.b= ?:? )
Query plan:
sscan
    class: J node[?]
    cost:  ? card ?
Query stmt:
select J.a, J.b, J.[count(foo.c)] from (select foo.a, foo.b, count(foo.c) from foo foo group by foo.a having foo.b= ?:? ) J (a, b, [count(foo.c)])
===================================================
a    b    count(c)    
1     1     3     
2     1     2     

Query plan:
temp(group by)
    subplan: sscan
                 class: foo node[?]
                 cost:  ? card ?
    sort:  ? asc
    cost:  ? card ?
Query stmt:
select foo.a, foo.b, count(foo.c) from foo foo group by foo.a having foo.b= ?:? 
===================================================
a    b    count(c)    
1     1     3     

Query plan:
temp(group by)
    subplan: sscan
                 class: foo node[?]
                 sargs: term[?]
                 cost:  ? card ?
    sort:  ? asc
    cost:  ? card ?
Query stmt:
select foo.a, foo.b, count(foo.c) from foo foo where foo.a= ?:?  group by foo.a
===================================================
a    b    count(c)    
1     1     1     
2     2     1     

Query plan:
temp(group by)
    subplan: sscan
                 class: foo node[?]
                 sargs: term[?]
                 cost:  ? card ?
    sort:  ? asc, ? asc
    cost:  ? card ?
Query stmt:
select foo.a, foo.b, count(foo.c) from foo foo where foo.a=foo.b group by foo.a, foo.b
===================================================
a    b    count(c)    
1     1     3     

Query plan:
temp(group by)
    subplan: sscan
                 class: foo node[?]
                 cost:  ? card ?
    sort:  ? asc
    cost:  ? card ?
Query stmt:
select foo.a, foo.b, count(foo.c) from foo foo group by foo.a having foo.a=foo.b
===================================================
a    b    count(c)    
2     1     1     

Query plan:
temp(group by)
    subplan: sscan
                 class: foo node[?]
                 sargs: term[?]
                 cost:  ? card ?
    sort:  ? asc, ? asc
    cost:  ? card ?
Query stmt:
select foo.a, foo.b, count(foo.c) from foo foo where foo.a=foo.b+? group by foo.a, foo.b
===================================================
a    b    count(c)    
2     1     1     

Query plan:
temp(group by)
    subplan: sscan
                 class: foo node[?]
                 cost:  ? card ?
    sort:  ? asc, ? asc
    cost:  ? card ?
Query stmt:
select foo.a, foo.b, count(foo.c) from foo foo group by foo.a, foo.b having foo.a=foo.b+foo.c
===================================================
a    b    count(c)    
1     1     3     

Query plan:
temp(group by)
    subplan: sscan
                 class: foo node[?]
                 cost:  ? card ?
    sort:  ? asc
    cost:  ? card ?
Query stmt:
select foo.a, foo.b, count(foo.c) from foo foo group by foo.a having (foo.a>=foo.a and foo.a<=foo.b)
===================================================
a    b    count(c)    
1     1     1     
1     2     1     
1     3     1     
2     2     1     

Query plan:
temp(group by)
    subplan: sscan
                 class: foo node[?]
                 sargs: term[?]
                 cost:  ? card ?
    sort:  ? asc, ? asc
    cost:  ? card ?
Query stmt:
select foo.a, foo.b, count(foo.c) from foo foo where (foo.a>=foo.a and foo.a<=foo.b) group by foo.a, foo.b
===================================================
a    b    count(c)    
1     1     3     
2     1     2     

Query plan:
temp(group by)
    subplan: sscan
                 class: foo node[?]
                 cost:  ? card ?
    sort:  ? asc
    cost:  ? card ?
Query stmt:
select foo.a, foo.b, count(foo.c) from foo foo group by foo.a having count(foo.a)<>?
===================================================
a    b    count(c)    
1     1     1     
1     2     1     
1     3     1     
2     1     1     
2     2     1     

Query plan:
temp(group by)
    subplan: sscan
                 class: foo node[?]
                 cost:  ? card ?
    sort:  ? asc
    cost:  ? card ?
Query stmt:
select foo.a, foo.b, count(foo.c) from foo foo group by foo.a, foo.b+? having foo.b+?>?
===================================================
a    b    count(c)    
1     1     1     
1     2     1     
1     3     1     
2     1     1     
2     2     1     

Query plan:
temp(group by)
    subplan: sscan
                 class: foo node[?]
                 cost:  ? card ?
    sort:  ? asc
    cost:  ? card ?
Query stmt:
select foo.a, foo.b, count(foo.c) from foo foo group by foo.a, foo.b+? having foo.b+?>?
===================================================
0
===================================================
0
===================================================
0
===================================================
0
===================================================
0
===================================================
1000
===================================================
1000
===================================================
i    j    count(*)    
6.0     6.0     2     
7.0     7.0     2     
8.0     8.0     2     
9.0     9.0     2     
10.0     10.0     2     
11.0     11.0     2     
12.0     12.0     2     
13.0     13.0     2     
14.0     14.0     2     
15.0     15.0     2     

Query plan:
temp(group by)
    subplan: iscan
                 class: t node[?]
                 index: idx_t_i term[?]
                 cost:  ? card ?
    sort:  ? asc
    cost:  ? card ?
Query stmt:
select t.i, t.j, count(*) from t t where (t.i> ?:?  and t.i< ?:? ) group by t.i having groupby_num()<=? and (t.j> ?:? )
===================================================
i    j    count(*)    
11.0     11.0     2     
12.0     12.0     2     
13.0     13.0     2     
14.0     14.0     2     
15.0     15.0     2     
16.0     16.0     2     
17.0     17.0     2     
18.0     18.0     2     
19.0     19.0     2     
20.0     20.0     2     

Query plan:
temp(group by)
    subplan: iscan
                 class: t node[?]
                 index: idx_t_i term[?]
                 cost:  ? card ?
    sort:  ? asc
    cost:  ? card ?
Query stmt:
select t.i, t.j, count(*) from t t where (t.i> ?:?  and t.i< ?:? ) group by t.i having groupby_num()<=? and (t.j> ?:? )
===================================================
i    j    count(*)    
10.0     10.0     2     

Query plan:
temp(group by)
    subplan: iscan
                 class: t node[?]
                 index: idx_t_i term[?]
                 cost:  ? card ?
    sort:  ? asc
    cost:  ? card ?
Query stmt:
select t.i, t.j, count(*) from t t where (t.i> ?:?  and t.i< ?:? ) group by t.i having groupby_num()<=? and (t.j= ?:? )
===================================================
0
===================================================
0
===================================================
1
===================================================
1
===================================================
1
===================================================
a    bxxx    

Query plan:
temp(order by)
    subplan: temp(group by)
                 subplan: sscan
                              class: t? node[?]
                              cost:  ? card ?
                 sort:  ? asc
                 cost:  ? card ?
    sort:  ? asc, ? asc
    cost:  ? card ?
Query stmt:
select t?.a, nvl(t?.b, ?) from t? t? group by t?.a, nvl(t?.b, ?) having t?.b= ?:?  order by ?, ?
===================================================
a    bxxx    
2     2     

Query plan:
temp(order by)
    subplan: temp(group by)
                 subplan: sscan
                              class: t? node[?]
                              cost:  ? card ?
                 sort:  ? asc
                 cost:  ? card ?
    sort:  ? asc, ? asc
    cost:  ? card ?
Query stmt:
select t?.a, nvl(t?.b, ?) from t? t? group by t?.a, nvl(t?.b, ?) having t?.b is null  order by ?, ?
===================================================
a    bxxx    count(*)    

Query plan:
temp(order by)
    subplan: temp(group by)
                 subplan: sscan
                              class: t? node[?]
                              cost:  ? card ?
                 sort:  ? asc
                 cost:  ? card ?
    sort:  ? asc, ? asc
    cost:  ? card ?
Query stmt:
select t?.a, nvl(t?.b, ?), count(*) from t? t? group by t?.a, nvl(t?.b, ?) having t?.b= ?:?  order by ?, ?
===================================================
a    bxxx    
1     1     

Query plan:
temp(order by)
    subplan: temp(group by)
                 subplan: sscan
                              class: t? node[?]
                              cost:  ? card ?
                 sort:  ? asc
                 cost:  ? card ?
    sort:  ? asc, ? asc
    cost:  ? card ?
Query stmt:
select t?.a, nvl(t?.b, ?) from t? t? group by t?.a, nvl(t?.b, ?) having t?.b= ?:?  order by ?, ?
===================================================
a    bxxx    
2     2     

Query plan:
temp(order by)
    subplan: temp(group by)
                 subplan: sscan
                              class: t? node[?]
                              cost:  ? card ?
                 sort:  ? asc
                 cost:  ? card ?
    sort:  ? asc, ? asc
    cost:  ? card ?
Query stmt:
select t?.a, nvl(t?.b, ?) from t? t? group by t?.a, nvl(t?.b, ?) having t?.b is null  order by ?, ?
===================================================
a    bxxx    count(*)    
2     2     2     

Query plan:
temp(order by)
    subplan: temp(group by)
                 subplan: sscan
                              class: t? node[?]
                              cost:  ? card ?
                 sort:  ? asc
                 cost:  ? card ?
    sort:  ? asc, ? asc
    cost:  ? card ?
Query stmt:
select t?.a, nvl(t?.b, ?), count(*) from t? t? group by t?.a, nvl(t?.b, ?) having t?.b is null  order by ?, ?
===================================================
a    bxxx    
1     1     

Query plan:
temp(order by)
    subplan: temp(group by)
                 subplan: sscan
                              class: t? node[?]
                              cost:  ? card ?
                 sort:  ? asc
                 cost:  ? card ?
    sort:  ? asc, ? asc
    cost:  ? card ?
Query stmt:
select t?.a, nvl(t?.b, ?) from t? t? group by t?.a, nvl(t?.b, ?) having t?.b is not null  order by ?, ?
===================================================
a    bxxx    count(*)    
1     1     1     

Query plan:
temp(order by)
    subplan: temp(group by)
                 subplan: sscan
                              class: t? node[?]
                              cost:  ? card ?
                 sort:  ? asc
                 cost:  ? card ?
    sort:  ? asc, ? asc
    cost:  ? card ?
Query stmt:
select t?.a, nvl(t?.b, ?), count(*) from t? t? group by t?.a, nvl(t?.b, ?) having t?.b is not null  order by ?, ?
===================================================
0
===================================================
0
===================================================
0
===================================================
1
===================================================
1
===================================================
1
===================================================
a    bxxx    
2     2     

Query plan:
temp(order by)
    subplan: temp(group by)
                 subplan: sscan
                              class: t? node[?]
                              cost:  ? card ?
                 sort:  ? asc
                 cost:  ? card ?
    sort:  ? asc, ? asc
    cost:  ? card ?
Query stmt:
select t?.a,  ifnull(t?.b, ?) from t? t? group by t?.a,  ifnull(t?.b, ?) having t?.b= ?:?  order by ?, ?
===================================================
a    bxxx    

Query plan:
temp(order by)
    subplan: temp(group by)
                 subplan: sscan
                              class: t? node[?]
                              cost:  ? card ?
                 sort:  ? asc
                 cost:  ? card ?
    sort:  ? asc, ? asc
    cost:  ? card ?
Query stmt:
select t?.a,  ifnull(t?.b, ?) from t? t? group by t?.a,  ifnull(t?.b, ?) having t?.b is null  order by ?, ?
===================================================
a    b    bxxx    
2     2     2     

Query plan:
temp(order by)
    subplan: temp(group by)
                 subplan: sscan
                              class: t? node[?]
                              cost:  ? card ?
                 sort:  ? asc
                 cost:  ? card ?
    sort:  ? asc
    cost:  ? card ?
Query stmt:
select t?.a, t?.b,  ifnull(t?.b, ?) from t? t? group by t?.a,  ifnull(t?.b, ?) having t?.b= ?:?  order by ?
===================================================
a    b    bxxx    
1     1     1     
2     2     2     

Query plan:
temp(order by)
    subplan: temp(group by)
                 subplan: sscan
                              class: t? node[?]
                              cost:  ? card ?
                 sort:  ? asc
                 cost:  ? card ?
    sort:  ? asc, ? asc
    cost:  ? card ?
Query stmt:
select t?.a, t?.b,  ifnull(t?.b, ?) from t? t? group by t?.a,  ifnull(t?.b, ?) order by ?, ?
===================================================
0
===================================================
0
===================================================
0
===================================================
1
===================================================
1
===================================================
1
===================================================
1
===================================================
1
===================================================
1
===================================================
1
===================================================
1
===================================================
1
===================================================
i    k    
3     3     
4     4     
6     6     

Query plan:
temp(group by)
    subplan: sscan
                 class: t? node[?]
                 cost:  ? card ?
    sort:  
    cost:  ? card ?
Query stmt:
select t?.i, t?.k from t? t? group by t?.j
===================================================
i    k    
1     1     
1     1     
1     1     

Query plan:
temp(order by)
    subplan: sscan
                 class: t? node[?]
                 cost:  ? card ?
    sort:  ? asc, ? asc, ? asc
    cost:  ? card ?
Query stmt:
(select t?.i, t?.j, t?.k from t? t? order by ?, ?, ?)
Query plan:
temp(group by)
    subplan: sscan
                 class: newt node[?]
                 cost:  ? card ?
    sort:  
    cost:  ? card ?
Query stmt:
select newt.i, newt.k from (select t?.i, t?.j, t?.k from t? t? order by ?, ?, ?) newt (i, j, k) group by newt.j
===================================================
i    k    

Query plan:
temp(group by)
    subplan: sscan
                 class: t? node[?]
                 cost:  ? card ?
    sort:  
    cost:  ? card ?
Query stmt:
select t?.i, t?.k from t? t? group by t?.j having t?.i= ?:? 
===================================================
i    k    
1     1     
1     1     
1     1     

Query plan:
temp(order by)
    subplan: sscan
                 class: t? node[?]
                 cost:  ? card ?
    sort:  ? asc, ? asc, ? asc
    cost:  ? card ?
Query stmt:
(select t?.i, t?.j, t?.k from t? t? order by ?, ?, ?)
Query plan:
temp(group by)
    subplan: sscan
                 class: newt node[?]
                 cost:  ? card ?
    sort:  
    cost:  ? card ?
Query stmt:
select newt.i, newt.k from (select t?.i, t?.j, t?.k from t? t? order by ?, ?, ?) newt (i, j, k) group by newt.j having newt.i= ?:? 
===================================================
i    k    
3     3     
5     5     
7     7     

Query plan:
temp(order by)
    subplan: sscan
                 class: t? node[?]
                 cost:  ? card ?
    sort:  ? desc, ? asc, ? asc
    cost:  ? card ?
Query stmt:
(select t?.i, t?.j, t?.k from t? t? order by ? desc , ?, ?)
Query plan:
temp(group by)
    subplan: sscan
                 class: newt node[?]
                 cost:  ? card ?
    sort:  
    cost:  ? card ?
Query stmt:
select newt.i, newt.k from (select t?.i, t?.j, t?.k from t? t? order by ? desc , ?, ?) newt (i, j, k) group by newt.j
===================================================
i    k    

Query plan:
temp(group by)
    subplan: sscan
                 class: t? node[?]
                 cost:  ? card ?
    sort:  
    cost:  ? card ?
Query stmt:
select t?.i, t?.k from t? t? group by t?.j having t?.i= ?:? 
===================================================
i    k    

Query plan:
temp(order by)
    subplan: sscan
                 class: t? node[?]
                 cost:  ? card ?
    sort:  ? desc, ? asc, ? asc
    cost:  ? card ?
Query stmt:
(select t?.i, t?.j, t?.k from t? t? order by ? desc , ?, ?)
Query plan:
temp(group by)
    subplan: sscan
                 class: newt node[?]
                 cost:  ? card ?
    sort:  
    cost:  ? card ?
Query stmt:
select newt.i, newt.k from (select t?.i, t?.j, t?.k from t? t? order by ? desc , ?, ?) newt (i, j, k) group by newt.j having newt.i= ?:? 
===================================================
0
===================================================
0
===================================================
15
===================================================
i    count(*)    
null     3     
0     6     
1     6     

Query plan:
temp(group by)
    subplan: sscan
                 class: t node[?]
                 cost:  ? card ?
    sort:  ? asc
    cost:  ? card ?
Query stmt:
select t.i, count(*) from t t group by t.i
===================================================
i    count(*)    

Query plan:
temp(group by)
    subplan: sscan
                 class: t node[?]
                 sargs: term[?]
                 cost:  ? card ?
    sort:  ? asc
    cost:  ? card ?
Query stmt:
select t.i, count(*) from t t where t.i<>? group by t.i having t.j<>?
===================================================
i    (count(*)=3)    
null     1     
0     0     
1     0     

Query plan:
temp(group by)
    subplan: sscan
                 class: t node[?]
                 cost:  ? card ?
    sort:  ? asc
    cost:  ? card ?
Query stmt:
select t.i, (count(*)=?) from t t group by t.i
===================================================
i    (count(*)=3)    

Query plan:
temp(group by)
    subplan: sscan
                 class: t node[?]
                 sargs: term[?]
                 cost:  ? card ?
    sort:  ? asc
    cost:  ? card ?
Query stmt:
select t.i, (count(*)=?) from t t where t.i<>? group by t.i having t.j<>?
===================================================
i    j    count(*)    
null     0     3     
0     0     6     
1     0     6     

Query plan:
temp(group by)
    subplan: sscan
                 class: t node[?]
                 cost:  ? card ?
    sort:  ? asc
    cost:  ? card ?
Query stmt:
select t.i, t.j, count(*) from t t group by t.i
===================================================
0
===================================================
0
===================================================
36
===================================================
yyyy    sum(sales_sum)    
2000     14300.0     
2001     11870.0     
2002     13450.0     

Query plan:
temp(group by)
    subplan: sscan
                 class: t node[?]
                 cost:  ? card ?
    sort:  ? asc
    cost:  ? card ?
Query stmt:
select t.yyyy, sum(t.sales_sum) from t t group by t.yyyy
===================================================
yyyy    mm    sales_sum    sum(sales_sum)    
2000     1     1000.0     14300.0     

Query plan:
temp(group by)
    subplan: sscan
                 class: t node[?]
                 sargs: term[?]
                 cost:  ? card ?
    sort:  ? asc
    cost:  ? card ?
Query stmt:
select t.yyyy, t.mm, t.sales_sum, sum(t.sales_sum) from t t where t.yyyy= ?:?  group by t.yyyy having sum(t.sales_sum)>?
===================================================
yyyy    mm    sales_sum    sum(sales_sum)    
2000     1     1000.0     14300.0     

Query plan:
temp(group by)
    subplan: sscan
                 class: t node[?]
                 sargs: term[?]
                 cost:  ? card ?
    sort:  ? asc
    cost:  ? card ?
Query stmt:
select t.yyyy, t.mm, t.sales_sum, sum(t.sales_sum) from t t where t.yyyy= ?:?  group by t.yyyy having t.mm= ?:? 
===================================================
yyyy    mm    sales_sum    sum(sales_sum)    
2000     1     1000.0     14300.0     
2001     1     1010.0     11870.0     
2002     1     980.0     13450.0     

Query plan:
temp(group by)
    subplan: sscan
                 class: t node[?]
                 cost:  ? card ?
    sort:  ? asc
    cost:  ? card ?
Query stmt:
select t.yyyy, t.mm, t.sales_sum, sum(t.sales_sum) from t t group by t.yyyy having ((t.yyyy= ?:? ) or sum(t.sales_sum)>?)
===================================================
yyyy    mm    sales_sum    sum(sales_sum)    
2000     1     1000.0     14300.0     
2001     1     1010.0     11870.0     
2002     1     980.0     13450.0     

Query plan:
temp(group by)
    subplan: sscan
                 class: t node[?]
                 cost:  ? card ?
    sort:  ? asc
    cost:  ? card ?
Query stmt:
select t.yyyy, t.mm, t.sales_sum, sum(t.sales_sum) from t t group by t.yyyy having ((t.mm= ?:? ) or sum(t.sales_sum)>?)
===================================================
yyyy    mm    percent    
2000     1     0.06993007     
2001     1     0.085088458     
2002     1     0.072862454     

Query plan:
temp(group by)
    subplan: sscan
                 class: t node[?]
                 cost:  ? card ?
    sort:  ? asc
    cost:  ? card ?
Query stmt:
select t.yyyy, t.mm, t.sales_sum/sum(t.sales_sum) from t t group by t.yyyy having ((t.mm= ?:? ) or sum(t.sales_sum)>?)
===================================================
yyyy    sum(sales_sum)    
2000     14300.0     
2001     11870.0     
2002     13450.0     

Query plan:
temp(group by)
    subplan: sscan
                 class: t node[?]
                 cost:  ? card ?
    sort:  ? asc
    cost:  ? card ?
Query stmt:
select t.yyyy, sum(t.sales_sum) from t t group by t.yyyy having (t.mm<= ?:? )
===================================================
yyyy    sum(sales_sum)    

Query plan:
temp(group by)
    subplan: sscan
                 class: t node[?]
                 cost:  ? card ?
    sort:  ? asc
    cost:  ? card ?
Query stmt:
select t.yyyy, sum(t.sales_sum) from t t group by t.yyyy having t.mm= ?:? 
===================================================
yyyy    mm    sales_sum    sum(sales_sum)    
2000     1     1000.0     1000.0     
2000     2     770.0     770.0     
2000     3     630.0     630.0     
2000     4     890.0     890.0     
2000     5     500.0     500.0     
2000     6     900.0     900.0     
2000     7     1300.0     1300.0     
2000     8     1800.0     1800.0     
2000     9     2100.0     2100.0     
2000     10     1300.0     1300.0     
2000     11     1500.0     1500.0     
2000     12     1610.0     1610.0     
2000     null     null     14300.0     
2001     1     1010.0     1010.0     
2001     2     700.0     700.0     
2001     3     600.0     600.0     
2001     4     900.0     900.0     
2001     5     1200.0     1200.0     
2001     6     1400.0     1400.0     
2001     7     1700.0     1700.0     
2001     8     1110.0     1110.0     
2001     9     970.0     970.0     
2001     10     690.0     690.0     
2001     11     710.0     710.0     
2001     12     880.0     880.0     
2001     null     null     11870.0     
2002     1     980.0     980.0     
2002     2     750.0     750.0     
2002     3     730.0     730.0     
2002     4     980.0     980.0     
2002     5     1110.0     1110.0     
2002     6     570.0     570.0     
2002     7     1630.0     1630.0     
2002     8     1890.0     1890.0     
2002     9     2120.0     2120.0     
2002     10     970.0     970.0     
2002     11     420.0     420.0     
2002     12     1300.0     1300.0     
2002     null     null     13450.0     
null     null     null     39620.0     

Query plan:
sscan
    class: t node[?]
    cost:  ? card ?
Query stmt:
select t.yyyy, t.mm, t.sales_sum, sum(t.sales_sum) from t t group by t.yyyy, t.mm with rollup
===================================================
yyyy    mm    sales_sum    sum(sales_sum)    
2000     null     null     14300.0     
2001     null     null     11870.0     
2002     null     null     13450.0     
null     null     null     39620.0     

Query plan:
sscan
    class: t node[?]
    cost:  ? card ?
Query stmt:
select t.yyyy, t.mm, t.sales_sum, sum(t.sales_sum) from t t group by t.yyyy, t.mm with rollup having t.mm is null 
===================================================
yyyy    mm    sales_sum    sum(sales_sum)    
2000     1     1000.0     1000.0     
2001     1     1010.0     1010.0     
2002     1     980.0     980.0     

Query plan:
sscan
    class: t node[?]
    cost:  ? card ?
Query stmt:
select t.yyyy, t.mm, t.sales_sum, sum(t.sales_sum) from t t group by t.yyyy, t.mm with rollup having t.mm= ?:? 
===================================================
yyyy    mm    sales_sum    sum(sales_sum)    
2000     1     1000.0     1000.0     
2000     2     770.0     770.0     
2000     3     630.0     630.0     
2000     4     890.0     890.0     
2000     5     500.0     500.0     
2000     6     900.0     900.0     
2000     7     1300.0     1300.0     
2000     8     1800.0     1800.0     
2000     9     2100.0     2100.0     
2000     10     1300.0     1300.0     
2000     11     1500.0     1500.0     
2000     12     1610.0     1610.0     
2000     null     null     14300.0     

Query plan:
sscan
    class: t node[?]
    cost:  ? card ?
Query stmt:
select t.yyyy, t.mm, t.sales_sum, sum(t.sales_sum) from t t group by t.yyyy, t.mm with rollup having t.yyyy= ?:? 
===================================================
yyyy    mm    sales_sum    sum(sales_sum)    
2000     null     null     14300.0     

Query plan:
sscan
    class: t node[?]
    cost:  ? card ?
Query stmt:
select t.yyyy, t.mm, t.sales_sum, sum(t.sales_sum) from t t group by t.yyyy, t.mm with rollup having t.yyyy= ?:?  and sum(t.sales_sum)>?
===================================================
yyyy    mm    sales_sum    sum(sales_sum)    

Query plan:
temp(group by)
    subplan: sscan
                 class: t node[?]
                 sargs: term[?]
                 cost:  ? card ?
    sort:  ? asc
    cost:  ? card ?
Query stmt:
select t.yyyy, t.mm, t.sales_sum, sum(t.sales_sum) from t t where t.yyyy= ?:?  group by t.yyyy having t.mm= ?:? 
===================================================
yyyy    mm    sales_sum    sum(sales_sum)    
2000     1     1000.0     14300.0     

Query plan:
temp(group by)
    subplan: sscan
                 class: t node[?]
                 cost:  ? card ?
    sort:  ? asc
    cost:  ? card ?
Query stmt:
select t.yyyy, t.mm, t.sales_sum, sum(t.sales_sum) from t t group by t.yyyy having ((t.sales_sum= ?:? ) or (t.mm= ?:? ))
===================================================
yyyy    mm    sales_sum    sum(sales_sum)    

Query plan:
temp(group by)
    subplan: sscan
                 class: t node[?]
                 cost:  ? card ?
    sort:  ? asc
    cost:  ? card ?
Query stmt:
select t.yyyy, t.mm, t.sales_sum, sum(t.sales_sum) from t t group by t.yyyy having t.sales_sum= ?:?  and t.mm= ?:? 
===================================================
0
===================================================
0

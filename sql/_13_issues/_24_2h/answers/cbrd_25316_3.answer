===================================================
test data    
     

===================================================
0
===================================================
0
===================================================
0
===================================================
10
===================================================
55
===================================================
3
===================================================
0
===================================================
test case 3    
The UPDATE JOIN statement allow the use of analytic functions With subquery.     

===================================================
test case3: use avg    
     

===================================================
10
===================================================
col_a    c_r    
1     1.75     
2     1.5     
3     2     
4     2.5     
5     3     
6     3.5     
7     4     
8     4.5     
9     5     
10     5.5     

===================================================
test case3: use count    
     

===================================================
10
===================================================
col_a    c_r    
1     4     
2     2     
3     3     
4     4     
5     5     
6     6     
7     7     
8     8     
9     9     
10     10     

===================================================
test case3: use sum    
     

===================================================
10
===================================================
col_a    c_r    
1     7     
2     3     
3     6     
4     10     
5     15     
6     21     
7     28     
8     36     
9     45     
10     55     

===================================================
test case3: use min    
     

===================================================
10
===================================================
col_a    c_r    
1     1     
2     1     
3     1     
4     1     
5     1     
6     1     
7     1     
8     1     
9     1     
10     1     

===================================================
test case3: use max    
     

===================================================
10
===================================================
col_a    c_r    
1     3     
2     2     
3     3     
4     4     
5     5     
6     6     
7     7     
8     8     
9     9     
10     10     

===================================================
test case3: use stddev    
     

===================================================
10
===================================================
col_a    c_r    
1     0.82915619758885     
2     0.5     
3     0.8164965809277263     
4     1.118033988749895     
5     1.414213562373095     
6     1.707825127659933     
7     2     
8     2.29128784747792     
9     2.581988897471611     
10     2.872281323269014     

===================================================
test case3: use stddev_pop    
     

===================================================
10
===================================================
col_a    c_r    
1     0.82915619758885     
2     0.5     
3     0.8164965809277263     
4     1.118033988749895     
5     1.414213562373095     
6     1.707825127659933     
7     2     
8     2.29128784747792     
9     2.581988897471611     
10     2.872281323269014     

===================================================
test case3: use stddev_samp    
     

===================================================
10
===================================================
col_a    c_r    
1     0.9574271077563378     
2     0.7071067811865476     
3     1     
4     1.290994448735805     
5     1.581138830084189     
6     1.870828693386970     
7     2.160246899469286     
8     2.449489742783177     
9     2.738612787525830     
10     3.027650354097492     

===================================================
test case3: use var_pop    
     

===================================================
10
===================================================
col_a    c_r    
1     0.6875     
2     0.25     
3     0.666666666666667     
4     1.25     
5     2     
6     2.916666666666666     
7     4     
8     5.25     
9     6.666666666666668     
10     8.25     

===================================================
test case3: use var_samp    
     

===================================================
10
===================================================
col_a    c_r    
1     0.9166666666666661     
2     0.5     
3     1     
4     1.666666666666666     
5     2.5     
6     3.499999999999998     
7     4.666666666666664     
8     5.999999999999996     
9     7.5     
10     9.166666666666671     

===================================================
test case3: use variance    
     

===================================================
10
===================================================
col_a    c_r    
1     0.6875     
2     0.25     
3     0.666666666666667     
4     1.25     
5     2     
6     2.916666666666666     
7     4     
8     5.25     
9     6.666666666666668     
10     8.25     

===================================================
test case3: use ntile    
     

===================================================
10
===================================================
col_a    c_r    
1     1,2,3,4     
2     1,2     
3     1,2,3     
4     1,2,3,4     
5     1,2,3,4     
6     1,2,3,4     
7     1,2,3,4     
8     1,2,3,4     
9     1,2,3,4     
10     1,2,3,4     

===================================================
test case3: use median    
     

===================================================
10
===================================================
col_a    c_r    
1     1.5     
2     1.5     
3     2     
4     2.5     
5     3     
6     3.5     
7     4     
8     4.5     
9     5     
10     5.5     

===================================================
test case3: use first_value    
     

===================================================
10
===================================================
col_a    c_r    
1     1     
2     1     
3     1     
4     1     
5     1     
6     1     
7     1     
8     1     
9     1     
10     1     

===================================================
test case3: use last_value    
     

===================================================
10
===================================================
col_a    c_r    
1     1,2,3     
2     1,2     
3     1,2,3     
4     1,2,3,4     
5     1,2,3,4,5     
6     1,2,3,4,5,6     
7     1,2,3,4,5,6,7     
8     1,2,3,4,5,6,7,8     
9     1,2,3,4,5,6,7,8,9     
10     1,2,3,4,5,6,7,8,9,10     

===================================================
test case3: use nth_value    
     

===================================================
10
===================================================
col_a    c_r    
1     1     
2     1     
3     1     
4     1     
5     1     
6     1     
7     1     
8     1     
9     1     
10     1     

===================================================
test case3: use lead    
     

===================================================
10
===================================================
col_a    c_r    
1     -1,1,2,3     
2     -1,2     
3     -1,2,3     
4     -1,2,3,4     
5     -1,2,3,4,5     
6     -1,2,3,4,5,6     
7     -1,2,3,4,5,6,7     
8     -1,2,3,4,5,6,7,8     
9     -1,2,3,4,5,6,7,8,9     
10     -1,2,3,4,5,6,7,8,9,10     

===================================================
test case3: use lag    
     

===================================================
10
===================================================
col_a    c_r    
1     -1,1,2     
2     -1,1     
3     -1,1,2     
4     -1,1,2,3     
5     -1,1,2,3,4     
6     -1,1,2,3,4,5     
7     -1,1,2,3,4,5,6     
8     -1,1,2,3,4,5,6,7     
9     -1,1,2,3,4,5,6,7,8     
10     -1,1,2,3,4,5,6,7,8,9     

===================================================
test case3: use row_number    
     

===================================================
10
===================================================
col_a    c_r    
1     1,2,3,4     
2     1,2     
3     1,2,3     
4     1,2,3,4     
5     1,2,3,4,5     
6     1,2,3,4,5,6     
7     1,2,3,4,5,6,7     
8     1,2,3,4,5,6,7,8     
9     1,2,3,4,5,6,7,8,9     
10     1,2,3,4,5,6,7,8,9,10     

===================================================
test case3: use rank    
     

===================================================
10
===================================================
col_a    c_r    
1     1,3,4     
2     1,2     
3     1,2,3     
4     1,2,3,4     
5     1,2,3,4,5     
6     1,2,3,4,5,6     
7     1,2,3,4,5,6,7     
8     1,2,3,4,5,6,7,8     
9     1,2,3,4,5,6,7,8,9     
10     1,2,3,4,5,6,7,8,9,10     

===================================================
test case3: use dense_rank    
     

===================================================
10
===================================================
col_a    c_r    
1     1,2,3     
2     1,2     
3     1,2,3     
4     1,2,3,4     
5     1,2,3,4,5     
6     1,2,3,4,5,6     
7     1,2,3,4,5,6,7     
8     1,2,3,4,5,6,7,8     
9     1,2,3,4,5,6,7,8,9     
10     1,2,3,4,5,6,7,8,9,10     

===================================================
test case3: use cume_dist    
     

===================================================
10
===================================================
col_a    c_r    
1     0.5,0.75,1     
2     0.5,1     
3     0.3333333333333333,0.6666666666666666,1     
4     0.25,0.5,0.75,1     
5     0.2,0.4,0.6,0.8,1     
6     0.1666666666666666,0.3333333333333333,0.5,0.6666666666666666,0.8333333333333334,1     
7     0.1428571428571428,0.2857142857142857,0.4285714285714285,0.5714285714285714,0.7142857142857143,0.8571428571428571,1     
8     0.125,0.25,0.375,0.5,0.625,0.75,0.875,1     
9     0.1111111111111111,0.2222222222222222,0.3333333333333333,0.4444444444444444,0.5555555555555556,0.6666666666666666,0.7777777777777778,0.8888888888888888,1     
10     0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9,1     

===================================================
test case3: use percent_rank    
     

===================================================
10
===================================================
col_a    c_r    
1     0,0.6666666666666666,1     
2     0,1     
3     0,0.5,1     
4     0,0.3333333333333333,0.6666666666666666,1     
5     0,0.25,0.5,0.75,1     
6     0,0.2,0.4,0.6,0.8,1     
7     0,0.1666666666666666,0.3333333333333333,0.5,0.6666666666666666,0.8333333333333334,1     
8     0,0.1428571428571428,0.2857142857142857,0.4285714285714285,0.5714285714285714,0.7142857142857143,0.8571428571428571,1     
9     0,0.125,0.25,0.375,0.5,0.625,0.75,0.875,1     
10     0,0.1111111111111111,0.2222222222222222,0.3333333333333333,0.4444444444444444,0.5555555555555556,0.6666666666666666,0.7777777777777778,0.8888888888888888,1     

===================================================
test case3: use percentile_cont    
     

===================================================
10
===================================================
col_a    c_r    
1     1.5     
2     1.5     
3     2     
4     2.5     
5     3     
6     3.5     
7     4     
8     4.5     
9     5     
10     5.5     

===================================================
test case3: use percentile_disc    
     

===================================================
10
===================================================
col_a    c_r    
1     1     
2     1     
3     2     
4     2     
5     3     
6     3     
7     4     
8     4     
9     5     
10     5     

===================================================
0
===================================================
0

===================================================
0
===================================================
0
===================================================
0
===================================================
0
===================================================
1
===================================================
1
===================================================
1
===================================================
1
===================================================
1
===================================================
1
===================================================
av    bv    
value a1     value a1     
value a2     value a2     
value a3     value a3     

Query plan:
temp(order by)
    subplan: idx-join (inner join)
                 outer: sscan
                            class: sq node[?]
                            cost:  ? card ?
                 inner: iscan
                            class: b node[?]
                            index: tj_id term[?]
                            cost:  ? card ?
                 cost:  ? card ?
    sort:  ? asc, ? asc
    cost:  ? card ?
Query stmt:
select /*+ ORDERED */ sq.val, b.val from tj sq inner join tj b on sq.id=b.id using index b.tj_id, sq.tj_id order by ?, ?
===================================================
id    val    
1     value b1     
2     value b2     
3     value b3     

Query plan:
temp(order by)
    subplan: idx-join (inner join)
                 outer: sscan
                            class: sq node[?]
                            cost:  ? card ?
                 inner: iscan
                            class: tk node[?]
                            index: tk_id term[?]
                            cost:  ? card ?
                 cost:  ? card ?
    sort:  ? asc
    cost:  ? card ?
Query stmt:
select /*+ ORDERED */ sq.id, tk.val from tj sq inner join tk tk on sq.id=tk.id using index sq.tj_id order by ?
===================================================
0
===================================================
6
===================================================
a    b    c    
cub     cubrid     1     
ora     oracle     2     
post     postgre     3     
my     mysql     4     
ms     mssql     5     
park     parksehun     1     

Query plan:
nl-join (inner join)
    edge:  term[?] AND term[?] AND term[?]
    outer: sscan
               class: a node[?]
               cost:  ? card ?
    inner: sscan
               class: b node[?]
               sargs: term[?] AND term[?] AND term[?] AND term[?]
               cost:  ? card ?
    cost:  ? card ?
Query stmt:
select /*+ ORDERED */ a.a, a.b, a.c from tmp_hls a, tmp_hls b where (a.a=b.a) and a.b=b.b and a.c=b.c and (b.c>= ?:? )
===================================================
a    b    c    
cub     cubrid     1     
ora     oracle     2     
post     postgre     3     
my     mysql     4     
ms     mssql     5     
park     parksehun     1     

Query plan:
nl-join (inner join)
    edge:  term[?] AND term[?] AND term[?]
    outer: sscan
               class: a node[?]
               cost:  ? card ?
    inner: sscan
               class: b node[?]
               sargs: term[?] AND term[?] AND term[?] AND term[?]
               cost:  ? card ?
    cost:  ? card ?
Query stmt:
select /*+ ORDERED */ a.a, a.b, a.c from tmp_hls a, tmp_hls b where (b.a=a.a) and a.c=b.c and b.b=a.b and (b.c>= ?:? )
===================================================
a    b    c    
cub     cubrid     1     
cub     cubrid     1     
ora     oracle     2     
post     postgre     3     
my     mysql     4     
ms     mssql     5     
park     parksehun     1     
park     parksehun     1     

Query plan:
nl-join (inner join)
    edge:  term[?]
    outer: sscan
               class: a node[?]
               cost:  ? card ?
    inner: sscan
               class: b node[?]
               sargs: term[?] AND term[?]
               cost:  ? card ?
    cost:  ? card ?
Query stmt:
select /*+ ORDERED */ a.a, a.b, a.c from tmp_hls a, tmp_hls b where (b.c=a.c) and (b.c>= ?:? )
===================================================
a    b    c    
post     postgre     3     
my     mysql     4     
ms     mssql     5     

Query plan:
nl-join (inner join)
    edge:  term[?]
    outer: nl-join (inner join)
               edge:  term[?] AND term[?]
               outer: sscan
                          class: a node[?]
                          cost:  ? card ?
               inner: sscan
                          class: b node[?]
                          sargs: term[?] AND term[?] AND term[?]
                          cost:  ? card ?
               cost:  ? card ?
    inner: sscan
               class: c node[?]
               sargs: term[?] AND term[?]
               cost:  ? card ?
    cost:  ? card ?
Query stmt:
select /*+ ORDERED */ a.a, a.b, a.c from tmp_hls a, tmp_hls b, tmp_hls c where (a.a=b.a) and b.b=a.b and b.a=c.a and (b.c>= ?:? ) and (c.c>= ?:? )
===================================================
0
===================================================
0
===================================================
0
===================================================
0

===================================================
0
===================================================
0
===================================================
0
===================================================
0
===================================================
1000
===================================================
0
===================================================
0
===================================================
0
===================================================
col1    col2    col3    
1     1     1     
2     2     2     
3     3     3     
4     4     4     
5     5     5     
6     6     6     
7     7     7     
8     8     8     
9     9     9     
10     10     0     

Query plan:
sscan
    class: t_? node[?]
    cost:  ? card ?
Query stmt:
(select tbl.col?, tbl.col?, tbl.col? from table({?}) t_? (c_?))
Query plan:
nl-join (cselect join)
    edge:  table(?) -> t_? node[?]
    outer: sscan
               class: t_? node[?]
               cost:  ? card ?
    inner: sscan
               class: t_? node[?]
               cost:  ? card ?
    cost:  ? card ?
Query stmt:
(select t_?.c_?, t_?.c_?, t_?.c_?, t_?.c_? from (select tbl.col?, tbl.col?, tbl.col? from table({?}) t_? (c_?)) t_? (c_?, c_?, c_?), (fn_string(t_?.c_?)) t_? (c_?))
Query plan:
nl-join (inner join)
    edge:  table(?) -> t_? node[?]
    outer: sscan
               class: tbl node[?]
               cost:  ? card ?
    inner: sscan
               class: t_? node[?]
               sargs: table(?) -> t_? node[?] AND term[?]
               cost:  ? card ?
    subqs: ?
    cost:  ? card ?
Query stmt:
select tbl.col?, tbl.col?, tbl.col? from tbl tbl, (select t_?.c_?, t_?.c_?, t_?.c_?, t_?.c_? from (select tbl.col?, tbl.col?, tbl.col? from table({?}) t_? (c_?)) t_? (c_?, c_?, c_?), (fn_string(t_?.c_?)) t_? (c_?)) t_? (c_?, c_?, c_?, c_?) where  cast(t_?.c_? as double) between ? and ?
===================================================
col1    col2    col3    
1     1     1     
2     2     2     
3     3     3     
4     4     4     
5     5     5     
6     6     6     
7     7     7     
8     8     8     
9     9     9     
10     10     0     

Query plan:
iscan
    class: tbl node[?]
    index: idx?_tbl term[?]
    cost:  ? card ?
Query stmt:
select tbl.col?, tbl.col?, tbl.col? from tbl tbl where (tbl.col?>=fn_int(?) and tbl.col?<=?)
===================================================
col1    col2    col3    
1     1     1     
2     2     2     
3     3     3     
4     4     4     
5     5     5     
6     6     6     
7     7     7     
8     8     8     
9     9     9     
10     10     0     

Query plan:
iscan
    class: tbl node[?]
    index: idx?_tbl term[?]
    cost:  ? card ?
Query stmt:
select tbl.col?, tbl.col?, tbl.col? from tbl tbl where (tbl.col?>=? and tbl.col?<=fn_int(?))
===================================================
col1    col2    col3    
1     1     1     
2     2     2     
3     3     3     
4     4     4     
5     5     5     
6     6     6     
7     7     7     
8     8     8     
9     9     9     
10     10     0     

Query plan:
iscan
    class: tbl node[?]
    index: idx?_tbl term[?]
    cost:  ? card ?
Query stmt:
select tbl.col?, tbl.col?, tbl.col? from tbl tbl where (tbl.col?>=fn_int(?) and tbl.col?<=fn_int(?))
===================================================
col1    col2    col3    
1     1     1     
2     2     2     
3     3     3     
4     4     4     
5     5     5     
6     6     6     
7     7     7     
8     8     8     
9     9     9     
10     10     0     

Query plan:
sscan
    class: t_? node[?]
    cost:  ? card ?
Query stmt:
(select tbl.col?, tbl.col?, tbl.col? from table({?}) t_? (c_?))
Query plan:
nl-join (cselect join)
    edge:  table(?) -> t_? node[?]
    outer: sscan
               class: t_? node[?]
               cost:  ? card ?
    inner: sscan
               class: t_? node[?]
               cost:  ? card ?
    cost:  ? card ?
Query stmt:
(select t_?.c_?, t_?.c_?, t_?.c_?, t_?.c_? from (select tbl.col?, tbl.col?, tbl.col? from table({?}) t_? (c_?)) t_? (c_?, c_?, c_?), (fn_string(t_?.c_?)) t_? (c_?))
Query plan:
nl-join (inner join)
    edge:  table(?) -> t_? node[?]
    outer: sscan
               class: tbl node[?]
               cost:  ? card ?
    inner: sscan
               class: t_? node[?]
               sargs: table(?) -> t_? node[?] AND term[?]
               cost:  ? card ?
    subqs: ?
    cost:  ? card ?
Query stmt:
select tbl.col?, tbl.col?, tbl.col? from tbl tbl, (select t_?.c_?, t_?.c_?, t_?.c_?, t_?.c_? from (select tbl.col?, tbl.col?, tbl.col? from table({?}) t_? (c_?)) t_? (c_?, c_?, c_?), (fn_string(t_?.c_?)) t_? (c_?)) t_? (c_?, c_?, c_?, c_?) where  cast(t_?.c_? as double) between fn_int(?) and fn_int(?)
===================================================
count(*)    
1000     

Query plan:
sscan
    class: db_root node[?]
    sargs: term[?]
    cost:  ? card ?
Query stmt:
(select db_root.[triggers] from db_root db_root where true=fn_int(?))
Query plan:
sscan
    class: tbl node[?]
    sargs: term[?]
    cost:  ? card ?
Query stmt:
select count(*) from tbl tbl where  exists (select db_root.[triggers] from db_root db_root where true=fn_int(?))
===================================================
count(*)    
0     

Query plan:
sscan
    class: db_root node[?]
    sargs: term[?]
    cost:  ? card ?
Query stmt:
(select db_root.[triggers] from db_root db_root where true=fn_int(?))
Query plan:
sscan
    class: tbl node[?]
    sargs: term[?]
    cost:  ? card ?
Query stmt:
select count(*) from tbl tbl where  exists (select db_root.[triggers] from db_root db_root where true=fn_int(?))
===================================================
count(*)    
0     

Query plan:
sscan
    class: db_root node[?]
    sargs: term[?]
    cost:  ? card ?
Query stmt:
(select db_root.[triggers] from db_root db_root where true=fn_int(?))
Query plan:
sscan
    class: tbl node[?]
    sargs: term[?]
    cost:  ? card ?
Query stmt:
select count(*) from tbl tbl where  not  exists (select db_root.[triggers] from db_root db_root where true=fn_int(?))
===================================================
count(*)    
1000     

Query plan:
sscan
    class: db_root node[?]
    sargs: term[?]
    cost:  ? card ?
Query stmt:
(select db_root.[triggers] from db_root db_root where true=fn_int(?))
Query plan:
sscan
    class: tbl node[?]
    sargs: term[?]
    cost:  ? card ?
Query stmt:
select count(*) from tbl tbl where  not  exists (select db_root.[triggers] from db_root db_root where true=fn_int(?))
===================================================
0
===================================================
col1    col2    col3    

Query plan:
sscan
    class: tbl node[?]
    sargs: term[?]
    cost:  ? card ?
Query stmt:
select tbl.col?, tbl.col?, tbl.col? from tbl tbl where fn_string( ?:? ) between  ?:?  and  ?:? 
===================================================
0
===================================================
0
===================================================
col1    col2    col3    
1     1     1     
2     2     2     
3     3     3     
4     4     4     
5     5     5     
6     6     6     
7     7     7     
8     8     8     
9     9     9     
10     10     0     

Query plan:
iscan
    class: tbl node[?]
    index: idx?_tbl term[?]
    cost:  ? card ?
Query stmt:
select tbl.col?, tbl.col?, tbl.col? from tbl tbl where (tbl.col?>=fn_int( ?:? ) and tbl.col?<= ?:? )
===================================================
0
===================================================
0
===================================================
col1    col2    col3    
1     1     1     
2     2     2     
3     3     3     
4     4     4     
5     5     5     
6     6     6     
7     7     7     
8     8     8     
9     9     9     
10     10     0     

Query plan:
iscan
    class: tbl node[?]
    index: idx?_tbl term[?]
    cost:  ? card ?
Query stmt:
select tbl.col?, tbl.col?, tbl.col? from tbl tbl where (tbl.col?>= ?:?  and tbl.col?<=fn_int( ?:? ))
===================================================
0
===================================================
0
===================================================
col1    col2    col3    
1     1     1     
2     2     2     
3     3     3     
4     4     4     
5     5     5     
6     6     6     
7     7     7     
8     8     8     
9     9     9     
10     10     0     

Query plan:
iscan
    class: tbl node[?]
    index: idx?_tbl term[?]
    cost:  ? card ?
Query stmt:
select tbl.col?, tbl.col?, tbl.col? from tbl tbl where (tbl.col?>=fn_int( ?:? ) and tbl.col?<=fn_int( ?:? ))
===================================================
0
===================================================
0
===================================================
Error:-181
===================================================
0
===================================================
0
===================================================
count(*)    
1000     

Query plan:
sscan
    class: db_root node[?]
    sargs: term[?]
    cost:  ? card ?
Query stmt:
(select db_root.[triggers] from db_root db_root where true=fn_int( ?:? ))
Query plan:
sscan
    class: tbl node[?]
    sargs: term[?]
    cost:  ? card ?
Query stmt:
select count(*) from tbl tbl where  exists (select db_root.[triggers] from db_root db_root where true=fn_int( ?:? ))
===================================================
0
===================================================
0
===================================================
count(*)    
0     

Query plan:
sscan
    class: db_root node[?]
    sargs: term[?]
    cost:  ? card ?
Query stmt:
(select db_root.[triggers] from db_root db_root where true=fn_int( ?:? ))
Query plan:
sscan
    class: tbl node[?]
    sargs: term[?]
    cost:  ? card ?
Query stmt:
select count(*) from tbl tbl where  exists (select db_root.[triggers] from db_root db_root where true=fn_int( ?:? ))
===================================================
0
===================================================
0
===================================================
count(*)    
0     

Query plan:
sscan
    class: db_root node[?]
    sargs: term[?]
    cost:  ? card ?
Query stmt:
(select db_root.[triggers] from db_root db_root where true=fn_int( ?:? ))
Query plan:
sscan
    class: tbl node[?]
    sargs: term[?]
    cost:  ? card ?
Query stmt:
select count(*) from tbl tbl where  not  exists (select db_root.[triggers] from db_root db_root where true=fn_int( ?:? ))
===================================================
0
===================================================
0
===================================================
count(*)    
1000     

Query plan:
sscan
    class: db_root node[?]
    sargs: term[?]
    cost:  ? card ?
Query stmt:
(select db_root.[triggers] from db_root db_root where true=fn_int( ?:? ))
Query plan:
sscan
    class: tbl node[?]
    sargs: term[?]
    cost:  ? card ?
Query stmt:
select count(*) from tbl tbl where  not  exists (select db_root.[triggers] from db_root db_root where true=fn_int( ?:? ))
===================================================
0
===================================================
0
===================================================
0
===================================================
0

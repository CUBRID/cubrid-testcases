===================================================
0
===================================================
0
===================================================
0
===================================================
0
===================================================
1
===================================================
1
===================================================
1
===================================================
1
===================================================
1
===================================================
1
===================================================
1
===================================================
1
===================================================
1
===================================================
1
===================================================
1
===================================================
1
===================================================
1
===================================================
1
===================================================
1
===================================================
1
===================================================
1
===================================================
1
===================================================
1
===================================================
1
===================================================
1
===================================================
1
===================================================
1
===================================================
1
===================================================
1
===================================================
1
===================================================
1
===================================================
1
===================================================
1
===================================================
1
===================================================
1
===================================================
1
===================================================
1
===================================================
1
===================================================
1
===================================================
1
===================================================
1
===================================================
1
===================================================
1
===================================================
1
===================================================
1
===================================================
1
===================================================
1
===================================================
1
===================================================
1
===================================================
1
===================================================
1
===================================================
0
===================================================
0
===================================================
0
===================================================
0
===================================================
0
1
===================================================
1
===================================================
1
===================================================
1
===================================================
1
===================================================
1
===================================================
1
===================================================
1
===================================================
1
===================================================
1
===================================================
1
===================================================
1
===================================================
11
===================================================
0
===================================================
0
===================================================
0
===================================================
0
===================================================
909
===================================================
855
===================================================
890
===================================================
816
===================================================
435
===================================================
0
===================================================
0
===================================================
0
===================================================
0
===================================================
id    
1     
1     
1     

Query plan:
iscan
    class: tab? node[?]
    index: i_tab?_id keylimit ? term[?] (covers)
    cost:  ? card ?
Query stmt:
select tab?.id from tab? tab? where (tab?.id> ?:? ) using index tab?.i_tab?_id(+) keylimit  ?:? 
===================================================
id    
1     
1     
1     

Query plan:
iscan
    class: tab? node[?]
    index: i_tab?_id_num keylimit ? term[?] (covers)
    filtr: term[?]
    cost:  ? card ?
Query stmt:
select tab?.id from tab? tab? where (tab?.id> ?:? ) and (tab?.num> ?:? ) using index tab?.i_tab?_id_num(+) keylimit  ?:? 
===================================================
id    text    
4     vwx     
5     vwx     
6     vwx     
7     vwx     

Query plan:
nl-join (cross join)
    outer: iscan
               class: tab? node[?]
               index: i_tab?_id keylimit ?, ? term[?] (covers)
               cost:  ? card ?
    inner: iscan
               class: tab? node[?]
               index: i_tab?_text keylimit ?, ? term[?] (covers)
               cost:  ? card ?
    cost:  ? card ?
Query stmt:
select tab?.id, tab?.[text] from tab? tab?, tab? tab? where (tab?.id> ?:? ) and (tab?.[text]< ?:? ) using index tab?.i_tab?_id(+) keylimit  ?:? , ?:? , tab?.i_tab?_text(+) keylimit  ?:? , ?:? 
===================================================
id    num    id    
1     0     5     
1     0     6     
1     1     5     
1     1     6     
1     2     5     
1     2     6     

Query plan:
nl-join (cross join)
    outer: iscan
               class: tab? node[?]
               index: i_tab?_id_num keylimit ? term[?] (covers)
               cost:  ? card ?
    inner: iscan
               class: tab? node[?]
               index: i_tab?_id keylimit ?, ? term[?] (covers)
               cost:  ? card ?
    cost:  ? card ?
Query stmt:
select tab?.id, tab?.num, tab?.id from tab? tab?, tab? tab? where (tab?.id> ?:? ) and (tab?.id> ?:? ) using index tab?.i_tab?_id_num(+) keylimit  ?:? , tab?.i_tab?_id(+) keylimit  ?:? , ?:? 
===================================================
id    
1     
2     
2     
2     
2     

Query plan:
iscan
    class: tab? node[?]
    index: i_tab?_id keylimit ?, ? term[?] (covers)
    cost:  ? card ?
Query stmt:
select tab?.id from tab? tab? where (tab?.id> ?:? ) using index tab?.i_tab?_id(+) keylimit  ?:? , ?:? 
===================================================
Error:-454
===================================================
Error:-454
===================================================
Error:-454
===================================================
Error:-454
===================================================
Error:-493
===================================================
Error:-454
===================================================
col_timestamp    col_datetime    
2009-05-03 18:59:12.0     2010-05-03 18:59:12.203     
2010-05-03 18:59:12.0     2010-05-03 18:59:12.203     

Query plan:
iscan
    class: test_table node[?]
    index: i_test_table_col_timestamp_col_datetime keylimit ? term[?] (covers)
    cost:  ? card ?
Query stmt:
select test_table.col_timestamp, test_table.col_datetime from test_table test_table where (test_table.col_timestamp> ?:? ) using index test_table.i_test_table_col_timestamp_col_datetime(+) keylimit  ?:? 
===================================================
col_timestamp    
2007-05-03 18:59:12.0     
2008-05-03 18:59:12.0     
2009-05-03 18:59:12.0     

Query plan:
iscan
    class: test_table node[?]
    index: i_test_table_col_timestamp_col_datetime keylimit ?, ? term[?] (covers)
    cost:  ? card ?
Query stmt:
select test_table.col_timestamp from test_table test_table where (test_table.col_timestamp> ?:? ) using index test_table.i_test_table_col_timestamp_col_datetime(+) keylimit  ?:? , ?:? 
===================================================
col_smallint    col_float    col_string    
123     1.234     abcdefghijklmn     
123     1.234     abcdefghijklmn     
123     1.234     abcdefghijklmn     
123     1.234     abcdefghijklmn     
123     1.234     abcdefghijklmn     
123     1.234     abcdefghijklmn     
123     1.234     abcdefghijklmn     
123     1.234     abcdefghijklmn     
123     1.234     abcdefghijklmn     

Query plan:
iscan
    class: test_table node[?]
    index: i_test_table_col_smallint_col_float_col_string keylimit ?, ? term[?] (covers)
    filtr: term[?]
    cost:  ? card ?
Query stmt:
select test_table.col_smallint, test_table.col_float, test_table.col_string from test_table test_table where (test_table.col_smallint> ?:? ) and test_table.col_string like  ?:?  using index test_table.i_test_table_col_smallint_col_float_col_string(+) keylimit  ?:? , ?:? 
===================================================
col_timestamp    col_datetime    
2003-05-03 18:59:12.0     2010-05-03 18:59:12.203     
2004-05-03 18:59:12.0     2010-05-03 18:59:12.203     
2005-05-03 18:59:12.0     2010-05-03 18:59:12.203     
2006-05-03 18:59:12.0     2010-05-03 18:59:12.203     
2007-05-03 18:59:12.0     2010-05-03 18:59:12.203     

Query plan:
iscan
    class: test_table node[?]
    index: i_test_table_col_timestamp_col_datetime keylimit ? term[?]
    sargs: term[?]
    cost:  ? card ?
Query stmt:
select test_table.col_timestamp, test_table.col_datetime from test_table test_table where test_table.col_varchar_? like  ?:?  and (test_table.col_timestamp> ?:? ) using index test_table.i_test_table_col_timestamp_col_datetime(+) keylimit  ?:? 
===================================================
id    id    
2282     501     
2282     502     
2282     503     
2282     504     
2283     501     
2283     502     
2283     503     
2283     504     
2284     501     
2284     502     
2284     503     
2284     504     
2285     501     
2285     502     
2285     503     
2285     504     
2286     501     
2286     502     
2286     503     
2286     504     
2287     501     
2287     502     
2287     503     
2287     504     
2288     501     
2288     502     
2288     503     
2288     504     
2289     501     
2289     502     
2289     503     
2289     504     
2290     501     
2290     502     
2290     503     
2290     504     
2291     501     
2291     502     
2291     503     
2291     504     
2292     501     
2292     502     
2292     503     
2292     504     
2293     501     
2293     502     
2293     503     
2293     504     
2294     501     
2294     502     
2294     503     
2294     504     
2295     501     
2295     502     
2295     503     
2295     504     
2296     501     
2296     502     
2296     503     
2296     504     
2297     501     
2297     502     
2297     503     
2297     504     
2298     501     
2298     502     
2298     503     
2298     504     
2299     501     
2299     502     
2299     503     
2299     504     
2300     501     
2300     502     
2300     503     
2300     504     
2301     501     
2301     502     
2301     503     
2301     504     
2302     501     
2302     502     
2302     503     
2302     504     

Query plan:
nl-join (cross join)
    outer: iscan
               class: a node[?]
               index: i_t?_id keylimit ?, ? term[?] (covers)
               cost:  ? card ?
    inner: iscan
               class: b node[?]
               index: i_t?_id keylimit ? term[?] (covers)
               cost:  ? card ?
    cost:  ? card ?
Query stmt:
select a.id, b.id from t? a, t? b where (a.id> ?:?  and a.id< ?:? ) and (b.id> ?:? ) using index a.i_t?_id(+) keylimit  ?:? , ?:? , b.i_t?_id(+) keylimit  ?:? 
===================================================
id    id    
2282     2282     
2283     2283     
2284     2284     
2285     2285     
2286     2286     
2287     2287     
2288     2288     
2289     2289     
2290     2290     
2291     2291     
2292     2292     
2293     2293     
2294     2294     
2295     2295     
2296     2296     
2297     2297     
2298     2298     
2299     2299     
2300     2300     
2301     2301     
2302     2302     

Query plan:
idx-join (inner join)
    outer: iscan
               class: a node[?]
               index: i_t?_id keylimit ?, ? term[?] (covers)
               cost:  ? card ?
    inner: iscan
               class: b node[?]
               index: i_t?_id keylimit ? term[?] (covers)
               cost:  ? card ?
    cost:  ? card ?
Query stmt:
select a.id, b.id from t? a, t? b where (a.id> ?:?  and a.id< ?:? ) and a.id=b.id using index a.i_t?_id(+) keylimit  ?:? , ?:? , b.i_t?_id(+) keylimit  ?:? 
===================================================
id    id    

Query plan:
idx-join (inner join)
    outer: iscan
               class: a node[?]
               index: i_t?_id keylimit ?, ? term[?] (covers)
               cost:  ? card ?
    inner: iscan
               class: b node[?]
               index: i_t?_id keylimit ? term[?] (covers)
               cost:  ? card ?
    cost:  ? card ?
Query stmt:
select a.id, b.id from t? a, t? b where (a.id> ?:?  and a.id< ?:? ) and a.id=b.id using index a.i_t?_id(+) keylimit  ?:? , ?:? , b.i_t?_id(+) keylimit  ?:? 
===================================================
text    
BDBDC     
BDBDD     
BDBDE     
BDBE     
BDBEA     
BDBEB     
BDBEC     
BDBED     
BDBEE     
BDC     
BDCA     
BDCAA     
BDCAB     
BDCAC     
BDCAD     
BDCAE     
BDCB     

Query plan:
iscan
    class: t? node[?]
    index: i_t?_text keylimit ?, ? term[?] (covers)
    cost:  ? card ?
Query stmt:
select t?.[text] from t? t? where (t?.[text]> ?:? ) using index t?.i_t?_text(+) keylimit  ?:? , ?:? 
===================================================
id    text    
501     ADBAB     
502     ADBAC     
503     ADBAD     
504     ADBAE     
505     ADBA     
506     ADBBA     
507     ADBBB     
508     ADBBC     
509     ADBBD     
510     ADBBE     
511     ADBB     
512     ADBCA     
513     ADBCB     
514     ADBCC     
515     ADBCD     
516     ADBCE     
517     ADBC     
518     ADBDA     
519     ADBDB     
520     ADBDC     
521     ADBDD     
522     ADBDE     
523     ADBD     
524     ADBEA     
525     ADBEB     
526     ADBEC     
527     ADBED     
528     ADBEE     
529     ADBE     
530     ADB     
531     ADCAA     
532     ADCAB     
533     ADCAC     
534     ADCAD     
535     ADCAE     
536     ADCA     
537     ADCBA     
538     ADCBB     
539     ADCBC     
540     ADCBD     
541     ADCBE     
542     ADCB     
543     ADCCA     
544     ADCCB     
545     ADCCC     
546     ADCCD     
547     ADCCE     
548     ADCC     
549     ADCDA     
550     ADCDB     
551     ADCDC     
552     ADCDD     
553     ADCDE     
554     ADCD     
555     ADCEA     
556     ADCEB     
557     ADCEC     
558     ADCED     
559     ADCEE     
560     ADCE     
561     ADC     
562     ADDAA     
563     ADDAB     
564     ADDAC     
565     ADDAD     
566     ADDAE     
567     ADDA     
568     ADDBA     
569     ADDBB     
570     ADDBC     
571     ADDBD     

Query plan:
iscan
    class: t? node[?]
    index: i_t?_id_text keylimit ? term[?] (covers)
    filtr: term[?]
    cost:  ? card ?
Query stmt:
select t?.id, t?.[text] from t? t? where (t?.id> ?:? ) and (t?.[text]< ?:? ) using index t?.i_t?_id_text(+) keylimit  ?:? 
===================================================
id    text    
580     ADDDA     
581     ADDDB     
582     ADDDC     
583     ADDDD     
584     ADDDE     
586     ADDEA     
587     ADDEB     
588     ADDEC     
589     ADDED     
590     ADDEE     
591     ADDE     
593     ADEAA     
594     ADEAB     
595     ADEAC     
596     ADEAD     
597     ADEAE     
598     ADEA     
599     ADEBA     
600     ADEBB     
601     ADEBC     
602     ADEBD     
603     ADEBE     
604     ADEB     
605     ADECA     
606     ADECB     
607     ADECC     
608     ADECD     
609     ADECE     
610     ADEC     
611     ADEDA     
612     ADEDB     
613     ADEDC     
614     ADEDD     
615     ADEDE     
616     ADED     
617     ADEEA     
618     ADEEB     
619     ADEEC     
620     ADEED     
621     ADEEE     
622     ADEE     
623     ADE     
625     AEAAA     
626     AEAAB     
627     AEAAC     
628     AEAAD     
629     AEAAE     
630     AEAA     
631     AEABA     
632     AEABB     
633     AEABC     
634     AEABD     
635     AEABE     
636     AEAB     
637     AEACA     
638     AEACB     
639     AEACC     
640     AEACD     
641     AEACE     
642     AEAC     
643     AEADA     
644     AEADB     
645     AEADC     
646     AEADD     
647     AEADE     
648     AEAD     
649     AEAEA     
650     AEAEB     
651     AEAEC     
652     AEAED     
653     AEAEE     

Query plan:
iscan
    class: t? node[?]
    index: i_t?_id_text keylimit ? term[?] (covers)
    filtr: term[?]
    cost:  ? card ?
Query stmt:
select t?.id, t?.[text] from t? t? where (t?.id> ?:? ) and (t?.[text]> ?:? ) using index t?.i_t?_id_text(+) keylimit  ?:? 
===================================================
text    text    
ACAEB     ABCA     
ACAEB     ABCAA     
ACAEB     ABCAB     
ACAEB     ABCAC     
ACAEB     ABCAD     
ACAEB     ABCAE     
ACAEB     ABCB     
ACAEB     ABCBA     
ACAEB     ABCBB     
ACAEB     ABCBC     
ACAEB     ABCBD     
ACAEB     ABCBE     
ACAEB     ABCC     
ACAEB     ABCCA     
ACAEB     ABCCB     
ACAEB     ABCCC     
ACAEB     ABCCD     
ACAEB     ABCCE     
ACAEB     ABCD     
ACAEC     ABCA     
ACAEC     ABCAA     
ACAEC     ABCAB     
ACAEC     ABCAC     
ACAEC     ABCAD     
ACAEC     ABCAE     
ACAEC     ABCB     
ACAEC     ABCBA     
ACAEC     ABCBB     
ACAEC     ABCBC     
ACAEC     ABCBD     
ACAEC     ABCBE     
ACAEC     ABCC     
ACAEC     ABCCA     
ACAEC     ABCCB     
ACAEC     ABCCC     
ACAEC     ABCCD     
ACAEC     ABCCE     
ACAEC     ABCD     
ACAED     ABCA     
ACAED     ABCAA     
ACAED     ABCAB     
ACAED     ABCAC     
ACAED     ABCAD     
ACAED     ABCAE     
ACAED     ABCB     
ACAED     ABCBA     
ACAED     ABCBB     
ACAED     ABCBC     
ACAED     ABCBD     
ACAED     ABCBE     
ACAED     ABCC     
ACAED     ABCCA     
ACAED     ABCCB     
ACAED     ABCCC     
ACAED     ABCCD     
ACAED     ABCCE     
ACAED     ABCD     
ACAEE     ABCA     
ACAEE     ABCAA     
ACAEE     ABCAB     
ACAEE     ABCAC     
ACAEE     ABCAD     
ACAEE     ABCAE     
ACAEE     ABCB     
ACAEE     ABCBA     
ACAEE     ABCBB     
ACAEE     ABCBC     
ACAEE     ABCBD     
ACAEE     ABCBE     
ACAEE     ABCC     
ACAEE     ABCCA     
ACAEE     ABCCB     
ACAEE     ABCCC     
ACAEE     ABCCD     
ACAEE     ABCCE     
ACAEE     ABCD     
ACB     ABCA     
ACB     ABCAA     
ACB     ABCAB     
ACB     ABCAC     
ACB     ABCAD     
ACB     ABCAE     
ACB     ABCB     
ACB     ABCBA     
ACB     ABCBB     
ACB     ABCBC     
ACB     ABCBD     
ACB     ABCBE     
ACB     ABCC     
ACB     ABCCA     
ACB     ABCCB     
ACB     ABCCC     
ACB     ABCCD     
ACB     ABCCE     
ACB     ABCD     

Query plan:
nl-join (cross join)
    outer: iscan
               class: a node[?]
               index: i_t?_text keylimit ?, ? term[?] (covers)
               cost:  ? card ?
    inner: iscan
               class: b node[?]
               index: i_t?_text term[?] (covers)
               cost:  ? card ?
    cost:  ? card ?
Query stmt:
select a.[text], b.[text] from t? a, t? b where (a.[text]>= ?:?  and a.[text]<= ?:? ) and (b.[text]>= ?:?  and b.[text]<= ?:? ) using index a.i_t?_text(+) keylimit  ?:? , ?:? 
===================================================
id    parentid    text    
3022     3029     DEBD     
3023     3028     DEBEA     
3024     3028     DEBEB     
3025     3028     DEBEC     
3026     3028     DEBED     
3027     3028     DEBEE     
3028     3029     DEBE     
3029     3123     DEB     
3030     3035     DECAA     
3031     3035     DECAB     
3032     3035     DECAC     
3033     3035     DECAD     
3034     3035     DECAE     
3035     3060     DECA     
3036     3041     DECBA     
3037     3041     DECBB     
3038     3041     DECBC     
3039     3041     DECBD     
3040     3041     DECBE     
3041     3060     DECB     
3042     3047     DECCA     
3043     3047     DECCB     
3044     3047     DECCC     
3045     3047     DECCD     
3046     3047     DECCE     
3047     3060     DECC     
3048     3053     DECDA     
3049     3053     DECDB     
3050     3053     DECDC     
3051     3053     DECDD     
3052     3053     DECDE     
3053     3060     DECD     
3054     3059     DECEA     
3055     3059     DECEB     
3056     3059     DECEC     
3057     3059     DECED     
3058     3059     DECEE     
3059     3060     DECE     
3060     3123     DEC     
3061     3066     DEDAA     
3062     3066     DEDAB     
3063     3066     DEDAC     
3064     3066     DEDAD     
3065     3066     DEDAE     
3066     3091     DEDA     
3067     3072     DEDBA     
3068     3072     DEDBB     
3069     3072     DEDBC     
3070     3072     DEDBD     
3071     3072     DEDBE     
3072     3091     DEDB     
3073     3078     DEDCA     
3074     3078     DEDCB     
3075     3078     DEDCC     
3076     3078     DEDCD     
3077     3078     DEDCE     
3078     3091     DEDC     
3079     3084     DEDDA     
3080     3084     DEDDB     

Query plan:
iscan
    class: t? node[?]
    index: i_t?_id_parentid_text keylimit ?, ? term[?] (covers)
    filtr: term[?]
    sort:  ? asc, ? asc, ? asc
    cost:  ? card ?
Query stmt:
select t?.id, t?.parentid, t?.[text] from t? t? where (t?.id> ?:? ) and (t?.parentid> ?:? ) using index t?.i_t?_id_parentid_text(+) keylimit  ?:? , ?:?  order by ?, ?
/* ---> skip ORDER BY */
===================================================
id    parentid    text    
2656     2661     DCAAA     
2657     2661     DCAAB     
2658     2661     DCAAC     
2659     2661     DCAAD     
2660     2661     DCAAE     
2661     2686     DCAA     
2662     2667     DCABA     
2663     2667     DCABB     
2664     2667     DCABC     
2665     2667     DCABD     
2666     2667     DCABE     
2667     2686     DCAB     
2668     2673     DCACA     
2669     2673     DCACB     
2670     2673     DCACC     
2671     2673     DCACD     
2672     2673     DCACE     
2673     2686     DCAC     
2674     2679     DCADA     
2675     2679     DCADB     
2676     2679     DCADC     
2677     2679     DCADD     
2678     2679     DCADE     
2679     2686     DCAD     

Query plan:
temp(order by)
    subplan: sscan
                 class: t? node[?]
                 sargs: term[?]
                 cost:  ? card ?
    sort:  ? asc, ? asc
    cost:  ? card ?
Query stmt:
select t?.id, t?.parentid, t?.[text] from t? t? where (t?.id< ?:? ) start with t?.[text]= ?:?  connect by  prior t?.id=t?.parentid using index t?.i_t?_id_parentid_text(+) keylimit  ?:?  order by ?, ?
===================================================
0
===================================================
0
===================================================
0
===================================================
0
===================================================
0
===================================================
0
0

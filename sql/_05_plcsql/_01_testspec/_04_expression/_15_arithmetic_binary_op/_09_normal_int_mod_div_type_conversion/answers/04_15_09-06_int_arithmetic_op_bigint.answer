===================================================
'This test is a normal run case. ( t_null, bigint )'    
This test is a normal run case. ( t_null, bigint )     


===================================================
0

===================================================
    
null     


***************************************
null = NULL
right_bigint = 1234
***************************************
0 mod 1234 = 0
~0 mod right_bigint = -1


0 div 1234 = 0
~0 div right_bigint = 0


===================================================
0

===================================================
'This test produces a compilation error. ( t_compile_error_boolean, bigint )'    
This test produces a compilation error. ( t_compile_error_boolean, bigint )     


===================================================
Error:-1360
In line 56, column 53
Stored procedure compile error: mismatched input 'NULL' expecting {RPAREN, ','}

===================================================
'This test is a normal run case. ( t_string, bigint )'    
This test is a normal run case. ( t_string, bigint )     


===================================================
0

===================================================
    
null     


***************************************
left_string = 123
right_bigint = 1234
***************************************
'123' mod 1234 = 123
~'123' mod 1234 = -124
'123' mod ~1234 = 123
~'123' mod ~1234 = -124
0 mod 1234 = 0
left_string mod right_bigint = 123
~left_string mod right_bigint = -124
left_string mod ~right_bigint = 123
~left_string mod ~right_bigint = -124
~0 mod right_bigint = -1

1234 mod '123' = 4
~1234 mod '123' = -5
1234 mod ~'123' = 118
~1234 mod ~'123' = -119
0 mod ~'123' = 0
right_bigint mod left_string = 4
~right_bigint mod left_string = -5
right_bigint mod ~left_string = 118
~right_bigint mod ~left_string = -119
~0 mod ~left_string = -1

'123' div 1234 = 0
~'123' div 1234 = 0
'123' div ~1234 = 0
~'123' div ~1234 = 0
0 div 1234 = 0
left_string div right_bigint = 0
~left_string div right_bigint = 0
left_string div ~right_bigint = 0
~left_string div ~right_bigint = 0
~0 div right_bigint = 0

1234 div '123' = 10
~1234 div '123' = -10
1234 div ~'123' = -9
~1234 div ~'123' = 9
0 div ~'123' = 0
right_bigint div left_string = 10
~right_bigint div left_string = -10
right_bigint div ~left_string = -9
~right_bigint div ~left_string = 9
~0 div ~left_string = 0

===================================================
0

===================================================
'This test is a normal run case. ( t_short, bigint )'    
This test is a normal run case. ( t_short, bigint )     


===================================================
0

===================================================
    
null     


***************************************
left_short = 8934
right_bigint = 1234
***************************************
8934 mod 1234 = 296
~8934 mod 1234 = -297
8934 mod ~1234 = 289
~8934 mod ~1234 = -290
0 mod 1234 = 0
left_short mod right_bigint = 296
~left_short mod right_bigint = -297
left_short mod ~right_bigint = 289
~left_short mod ~right_bigint = -290
~0 mod right_bigint = -1

1234 mod 8934 = 1234
~1234 mod 8934 = -1235
1234 mod ~8934 = 1234
~1234 mod ~8934 = -1235
0 mod ~8934 = 0
right_bigint mod left_short = 1234
~right_bigint mod left_short = -1235
right_bigint mod ~left_short = 1234
~right_bigint mod ~left_short = -1235
~0 mod ~left_short = -1

8934 div 1234 = 7
~8934 div 1234 = -7
8934 div ~1234 = -7
~8934 div ~1234 = 7
0 div 1234 = 0
left_short div right_bigint = 7
~left_short div right_bigint = -7
left_short div ~right_bigint = -7
~left_short div ~right_bigint = 7
~0 div right_bigint = 0

1234 div 8934 = 0
~1234 div 8934 = 0
1234 div ~8934 = 0
~1234 div ~8934 = 0
0 div ~8934 = 0
right_bigint div left_short = 0
~right_bigint div left_short = 0
right_bigint div ~left_short = 0
~right_bigint div ~left_short = 0
~0 div ~left_short = 0

===================================================
0

===================================================
'This test is a normal run case. ( t_int, bigint )'    
This test is a normal run case. ( t_int, bigint )     


===================================================
0

===================================================
    
null     


***************************************
left_int = 78234
right_bigint = 1234
***************************************
78234 mod 1234 = 492
~78234 mod 1234 = -493
78234 mod ~1234 = 429
~78234 mod ~1234 = -430
0 mod 1234 = 0
left_int mod right_bigint = 492
~left_int mod right_bigint = -493
left_int mod ~right_bigint = 429
~left_int mod ~right_bigint = -430
~0 mod right_bigint = -1

1234 mod 78234 = 1234
~1234 mod 78234 = -1235
1234 mod ~78234 = 1234
~1234 mod ~78234 = -1235
0 mod ~78234 = 0
right_bigint mod left_int = 1234
~right_bigint mod left_int = -1235
right_bigint mod ~left_int = 1234
~right_bigint mod ~left_int = -1235
~0 mod ~left_int = -1

78234 div 1234 = 63
~78234 div 1234 = -63
78234 div ~1234 = -63
~78234 div ~1234 = 63
0 div 1234 = 0
left_int div right_bigint = 63
~left_int div right_bigint = -63
left_int div ~right_bigint = -63
~left_int div ~right_bigint = 63
~0 div right_bigint = 0

1234 div 78234 = 0
~1234 div 78234 = 0
1234 div ~78234 = 0
~1234 div ~78234 = 0
0 div ~78234 = 0
right_bigint div left_int = 0
~right_bigint div left_int = 0
right_bigint div ~left_int = 0
~right_bigint div ~left_int = 0
~0 div ~left_int = 0

===================================================
0

===================================================
'This test is a normal run case. ( t_bigint, bigint )'    
This test is a normal run case. ( t_bigint, bigint )     


===================================================
0

===================================================
    
null     


***************************************
left_bigint = 278234
right_bigint = 1234
***************************************
278234 mod 1234 = 584
~278234 mod 1234 = -585
278234 mod ~1234 = 359
~278234 mod ~1234 = -360
0 mod 1234 = 0
left_bigint mod right_bigint = 584
~left_bigint mod right_bigint = -585
left_bigint mod ~right_bigint = 359
~left_bigint mod ~right_bigint = -360
~0 mod right_bigint = -1

1234 mod 278234 = 1234
~1234 mod 278234 = -1235
1234 mod ~278234 = 1234
~1234 mod ~278234 = -1235
0 mod ~278234 = 0
right_bigint mod left_bigint = 1234
~right_bigint mod left_bigint = -1235
right_bigint mod ~left_bigint = 1234
~right_bigint mod ~left_bigint = -1235
~0 mod ~left_bigint = -1

278234 div 1234 = 225
~278234 div 1234 = -225
278234 div ~1234 = -225
~278234 div ~1234 = 225
0 div 1234 = 0
left_bigint div right_bigint = 225
~left_bigint div right_bigint = -225
left_bigint div ~right_bigint = -225
~left_bigint div ~right_bigint = 225
~0 div right_bigint = 0

1234 div 278234 = 0
~1234 div 278234 = 0
1234 div ~278234 = 0
~1234 div ~278234 = 0
0 div ~278234 = 0
right_bigint div left_bigint = 0
~right_bigint div left_bigint = 0
right_bigint div ~left_bigint = 0
~right_bigint div ~left_bigint = 0
~0 div ~left_bigint = 0

===================================================
0

===================================================
'This test is a normal run case. ( t_numeric, bigint )'    
This test is a normal run case. ( t_numeric, bigint )     


===================================================
0

===================================================
    
null     


***************************************
left_numeric = 5678.1230
right_bigint = 1234
***************************************
5678.123 mod 1234 = 742
~5678.123 mod 1234 = -743
5678.123 mod ~1234 = 738
~5678.123 mod ~1234 = -739
0 mod 1234 = 0
left_numeric mod right_bigint = 742
~left_numeric mod right_bigint = -743
left_numeric mod ~right_bigint = 738
~left_numeric mod ~right_bigint = -739
~0 mod right_bigint = -1

1234 mod 5678.123 = 1234
~1234 mod 5678.123 = -1235
1234 mod ~5678.123 = 1234
~1234 mod ~5678.123 = -1235
0 mod ~5678.123 = 0
right_bigint mod left_numeric = 1234
~right_bigint mod left_numeric = -1235
right_bigint mod ~left_numeric = 1234
~right_bigint mod ~left_numeric = -1235
~0 mod ~left_numeric = -1

5678.123 div 1234 = 4
~5678.123 div 1234 = -4
5678.123 div ~1234 = -4
~5678.123 div ~1234 = 4
0 div 1234 = 0
left_numeric div right_bigint = 4
~left_numeric div right_bigint = -4
left_numeric div ~right_bigint = -4
~left_numeric div ~right_bigint = 4
~0 div right_bigint = 0

1234 div 5678.123 = 0
~1234 div 5678.123 = 0
1234 div ~5678.123 = 0
~1234 div ~5678.123 = 0
0 div ~5678.123 = 0
right_bigint div left_numeric = 0
~right_bigint div left_numeric = 0
right_bigint div ~left_numeric = 0
~right_bigint div ~left_numeric = 0
~0 div ~left_numeric = 0

===================================================
0

===================================================
'This test is a normal run case. ( t_float, bigint )'    
This test is a normal run case. ( t_float, bigint )     


===================================================
0

===================================================
    
null     


***************************************
left_float = 3677.345
right_bigint = 1234
***************************************
3677.345 mod 1234 = 1209
~3677.345 mod 1234 = -1210
3677.345 mod ~1234 = 1207
~3677.345 mod ~1234 = -1208
0 mod 1234 = 0
left_float mod right_bigint = 1209
~left_float mod right_bigint = -1210
left_float mod ~right_bigint = 1207
~left_float mod ~right_bigint = -1208
~0 mod right_bigint = -1

1234 mod 3677.345 = 1234
~1234 mod 3677.345 = -1235
1234 mod ~3677.345 = 1234
~1234 mod ~3677.345 = -1235
0 mod ~3677.345 = 0
right_bigint mod left_float = 1234
~right_bigint mod left_float = -1235
right_bigint mod ~left_float = 1234
~right_bigint mod ~left_float = -1235
~0 mod ~left_float = -1

3677.345 div 1234 = 2
~3677.345 div 1234 = -2
3677.345 div ~1234 = -2
~3677.345 div ~1234 = 2
0 div 1234 = 0
left_float div right_bigint = 2
~left_float div right_bigint = -2
left_float div ~right_bigint = -2
~left_float div ~right_bigint = 2
~0 div right_bigint = 0

1234 div 3677.345 = 0
~1234 div 3677.345 = 0
1234 div ~3677.345 = 0
~1234 div ~3677.345 = 0
0 div ~3677.345 = 0
right_bigint div left_float = 0
~right_bigint div left_float = 0
right_bigint div ~left_float = 0
~right_bigint div ~left_float = 0
~0 div ~left_float = 0

===================================================
0

===================================================
'This test is a normal run case. ( t_double, bigint )'    
This test is a normal run case. ( t_double, bigint )     


===================================================
0

===================================================
    
null     


***************************************
left_double = 56789.1234
right_bigint = 1234
***************************************
56789.1234 mod 1234 = 25
~56789.1234 mod 1234 = -26
56789.1234 mod ~1234 = 1214
~56789.1234 mod ~1234 = -1215
0 mod 1234 = 0
left_double mod right_bigint = 25
~left_double mod right_bigint = -26
left_double mod ~right_bigint = 1214
~left_double mod ~right_bigint = -1215
~0 mod right_bigint = -1

1234 mod 56789.1234 = 1234
~1234 mod 56789.1234 = -1235
1234 mod ~56789.1234 = 1234
~1234 mod ~56789.1234 = -1235
0 mod ~56789.1234 = 0
right_bigint mod left_double = 1234
~right_bigint mod left_double = -1235
right_bigint mod ~left_double = 1234
~right_bigint mod ~left_double = -1235
~0 mod ~left_double = -1

56789.1234 div 1234 = 46
~56789.1234 div 1234 = -46
56789.1234 div ~1234 = -45
~56789.1234 div ~1234 = 45
0 div 1234 = 0
left_double div right_bigint = 46
~left_double div right_bigint = -46
left_double div ~right_bigint = -45
~left_double div ~right_bigint = 45
~0 div right_bigint = 0

1234 div 56789.1234 = 0
~1234 div 56789.1234 = 0
1234 div ~56789.1234 = 0
~1234 div ~56789.1234 = 0
0 div ~56789.1234 = 0
right_bigint div left_double = 0
~right_bigint div left_double = 0
right_bigint div ~left_double = 0
~right_bigint div ~left_double = 0
~0 div ~left_double = 0

===================================================
0

===================================================
'This test produces a compilation error. ( t_compile_error_date, bigint )'    
This test produces a compilation error. ( t_compile_error_date, bigint )     


===================================================
Error:-1360
In line 59, column 55
Stored procedure compile error: operands do not have compatible types

===================================================
'This test produces a compilation error. ( t_compile_error_date, bigint )'    
This test produces a compilation error. ( t_compile_error_date, bigint )     


===================================================
Error:-1360
In line 59, column 55
Stored procedure compile error: operands do not have compatible types

===================================================
'This test produces a compilation error. ( t_compile_error_time, bigint )'    
This test produces a compilation error. ( t_compile_error_time, bigint )     


===================================================
Error:-1360
In line 59, column 55
Stored procedure compile error: operands do not have compatible types

===================================================
'This test produces a compilation error. ( t_compile_error_time, bigint )'    
This test produces a compilation error. ( t_compile_error_time, bigint )     


===================================================
Error:-1360
In line 59, column 55
Stored procedure compile error: operands do not have compatible types

===================================================
'This test produces a compilation error. ( t_compile_error_datetime, bigint )'    
This test produces a compilation error. ( t_compile_error_datetime, bigint )     


===================================================
Error:-1360
In line 59, column 59
Stored procedure compile error: operands do not have compatible types

===================================================
'This test produces a compilation error. ( t_compile_error_datetime, bigint )'    
This test produces a compilation error. ( t_compile_error_datetime, bigint )     


===================================================
Error:-1360
In line 59, column 59
Stored procedure compile error: operands do not have compatible types

===================================================
'This test produces a compilation error. ( t_compile_error_timestamp, bigint )'    
This test produces a compilation error. ( t_compile_error_timestamp, bigint )     


===================================================
Error:-1360
In line 59, column 60
Stored procedure compile error: operands do not have compatible types

===================================================
'This test produces a compilation error. ( t_compile_error_timestamp, bigint )'    
This test produces a compilation error. ( t_compile_error_timestamp, bigint )     


===================================================
Error:-1360
In line 59, column 60
Stored procedure compile error: operands do not have compatible types

===================================================
'This test produces a compilation error. ( t_compile_error_sys_refcursor, bigint )'    
This test produces a compilation error. ( t_compile_error_sys_refcursor, bigint )     


===================================================
Error:-1360
In line 56, column 54
Stored procedure compile error: argument 1 to the built-in function NVL has an invalid type

===================================================
'This test produces a compilation error. ( t_compile_error_sys_refcursor, bigint )'    
This test produces a compilation error. ( t_compile_error_sys_refcursor, bigint )     


===================================================
Error:-1360
In line 56, column 54
Stored procedure compile error: argument 1 to the built-in function NVL has an invalid type

===================================================
'This test produces a compilation error. ( t_compile_error_cursor, bigint )'    
This test produces a compilation error. ( t_compile_error_cursor, bigint )     


===================================================
Error:-1360
In line 56, column 47
Stored procedure compile error: argument 1 to the built-in function NVL has an invalid type

===================================================
'This test produces a compilation error. ( t_compile_error_cursor, bigint )'    
This test produces a compilation error. ( t_compile_error_cursor, bigint )     


===================================================
Error:-1360
In line 56, column 47
Stored procedure compile error: argument 1 to the built-in function NVL has an invalid type


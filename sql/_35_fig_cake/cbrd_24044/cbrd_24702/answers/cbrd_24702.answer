===================================================
0
===================================================
0
===================================================
1000000
===================================================
0
===================================================
0
===================================================
count(distinct col_a)    count(distinct col_b)    count(distinct col_c)    count(distinct col_d)    count(distinct col_e)    count(distinct col_f)    count(distinct col_g)    count(distinct col_h)    count(1)    
1000086     60440     1     2000     10     100     20000     109898     1000086     

===================================================
trace    

Query Plan:
  TABLE SCAN (dba.t)

  rewritten query: select /*+ SAMPLING_SCAN */ count(distinct [dba.t].col_a), count(distinct [dba.t].col_b), count(distinct [dba.t].col_c), count(distinct [dba.t].col_d), count(distinct [dba.t].col_e), count(distinct [dba.t].col_f), count(distinct [dba.t].col_g), count(distinct [dba.t].col_h), count(*) from [dba.t] [dba.t]

Trace Statistics:
  SELECT (time: ?, fetch: ?, fetch_time: ?, ioread: ?)
    SCAN (heap time: ?, fetch: ?, ioread: ?, readrows: ?, rows: ?)
     

===================================================
count(distinct col_a)    count(distinct col_b)    count(distinct col_c)    count(distinct col_d)    count(distinct col_e)    count(distinct col_f)    count(distinct col_g)    count(distinct col_h)    count(1)    
1000000     50001     1     1001     11     101     10001     100001     1000000     

===================================================
trace    

Query Plan:
  TABLE SCAN (dba.t)

  rewritten query: select count(distinct [dba.t].col_a), count(distinct [dba.t].col_b), count(distinct [dba.t].col_c), count(distinct [dba.t].col_d), count(distinct [dba.t].col_e), count(distinct [dba.t].col_f), count(distinct [dba.t].col_g), count(distinct [dba.t].col_h), count(*) from [dba.t] [dba.t]

Trace Statistics:
  SELECT (time: ?, fetch: ?, fetch_time: ?, ioread: ?)
    SCAN (table: dba.t), (heap time: ?, fetch: ?, ioread: ?, readrows: ?, rows: ?)
     

===================================================
0
===================================================
0
===================================================
1000000
===================================================
0
===================================================
count(distinct col_a)    count(distinct col_b)    count(distinct col_c)    count(distinct col_d)    count(distinct col_e)    count(distinct col_f)    count(distinct col_g)    count(distinct col_h)    count(1)    
1000250     93876     1     2000     10     100     19526     183188     1000250     

===================================================
trace    

Query Plan:
  TABLE SCAN (dba.t)

  rewritten query: select /*+ SAMPLING_SCAN */ count(distinct [dba.t].col_a), count(distinct [dba.t].col_b), count(distinct [dba.t].col_c), count(distinct [dba.t].col_d), count(distinct [dba.t].col_e), count(distinct [dba.t].col_f), count(distinct [dba.t].col_g), count(distinct [dba.t].col_h), count(*) from [dba.t] [dba.t]

Trace Statistics:
  SELECT (time: ?, fetch: ?, fetch_time: ?, ioread: ?)
    SCAN (heap time: ?, fetch: ?, ioread: ?, readrows: ?, rows: ?)
           PARTITION (heap time: ?, fetch: ?, ioread: ?, readrows: ?, rows: ?)
           PARTITION (heap time: ?, fetch: ?, ioread: ?, readrows: ?, rows: ?)
           PARTITION (heap time: ?, fetch: ?, ioread: ?, readrows: ?, rows: ?)
           PARTITION (heap time: ?, fetch: ?, ioread: ?, readrows: ?, rows: ?)
     

===================================================
count(distinct col_a)    count(distinct col_b)    count(distinct col_c)    count(distinct col_d)    count(distinct col_e)    count(distinct col_f)    count(distinct col_g)    count(distinct col_h)    count(1)    
1000000     50001     1     1001     11     101     10001     100001     1000000     

===================================================
trace    

Query Plan:
  TABLE SCAN (dba.t)

  rewritten query: select count(distinct [dba.t].col_a), count(distinct [dba.t].col_b), count(distinct [dba.t].col_c), count(distinct [dba.t].col_d), count(distinct [dba.t].col_e), count(distinct [dba.t].col_f), count(distinct [dba.t].col_g), count(distinct [dba.t].col_h), count(*) from [dba.t] [dba.t]

Trace Statistics:
  SELECT (time: ?, fetch: ?, fetch_time: ?, ioread: ?)
    SCAN (table: dba.t), (heap time: ?, fetch: ?, ioread: ?, readrows: ?, rows: ?)
           PARTITION (table: dba.t__p__p?), (heap time: ?, fetch: ?, ioread: ?, readrows: ?, rows: ?)
           PARTITION (table: dba.t__p__p?), (heap time: ?, fetch: ?, ioread: ?, readrows: ?, rows: ?)
           PARTITION (table: dba.t__p__p?), (heap time: ?, fetch: ?, ioread: ?, readrows: ?, rows: ?)
           PARTITION (table: dba.t__p__p?), (heap time: ?, fetch: ?, ioread: ?, readrows: ?, rows: ?)
     

===================================================
0
===================================================
0
